/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "http://localhost:8080/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 16);
/******/ })
/************************************************************************/
/******/ ({

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(5);


/***/ }),

/***/ 5:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var REG = /([a-zA-Z0-9_]+)/g;

var TableEx = function TableEx(el, config) {
    _classCallCheck(this, TableEx);

    this.el = el;
    this.config = config;

    this.createTableEx = function () {
        el.find('thead').empty();
        el.find('tbody').empty();
        el.find('thead').append('<tr></tr>');
        for (var i = 0; i < config.col.amount; i++) {
            el.find('thead tr').append('<th><input type="text" value="col' + i + '" class="form-control col-label"></th>');
        };

        for (var _i = 0; _i < config.row.amount; _i++) {
            var rows = '';
            for (var j = 0; j < config.col.amount; j++) {
                if (j === 0) {
                    rows += '<td><input type="text" value="row' + _i + '" class="form-control row-label"></td>';
                } else {
                    rows += '<td><input type="text" class="form-control value-datasource" placeholder="datasource">\n                                    <ul class="list-group data-list" style="display: none"></ul>\n                                </td>';
                }
            }
            el.find('tbody').append('<tr>' + rows + '</tr>');
        };
    };

    this.addCol = function () {
        el.find('thead tr').append('<th><input type="text" value="col' + config.col.amount + '" class="form-control col-label"></th>');
        el.find('tbody tr').each(function () {
            $(this).append('<td><input type="text" class="form-control value-datasource" placeholder="datasource">\n                                    <ul class="list-group data-list" style="display: none"></ul>\n                                </td>');
        });
        config.col.amount += 1;
    };

    this.removeCol = function () {
        if (config.col.amount >= 2) {
            el.find('thead tr th:last').remove();
            el.find('tbody tr').each(function () {
                $(this).find('td:last').remove();
            });
            config.col.amount -= 1;
        }
    };

    this.addRow = function () {
        var rows = '';
        for (var j = 0; j < config.col.amount; j++) {

            if (j === 0) {
                rows += '<td><input type="text" value="row' + config.row.amount + '" class="form-control row-label"></td>';
            } else {
                rows += '<td><input type="text" class="form-control value-datasource" placeholder="datasource">\n                                <ul class="list-group data-list" style="display: none"></ul>\n                             </td>';
            }
        }
        config.row.amount += 1;
        el.find('tbody').append('<tr>' + rows + '</tr>');
    };

    this.removeRow = function () {
        if (config.row.amount >= 2) {
            el.find('tbody tr:last').remove();
            config.row.amount -= 1;
        }
    };

    this.getValue = function () {
        var col_labels = [];
        el.find(".col-label").each(function () {
            col_labels.push($(this).val());
        });

        var dataRow = [];
        el.find(".row-label").each(function () {
            var row_lable = $(this).val();
            var value_datasoruce = [];
            $(this).parent().parent().find('.value-datasource').each(function () {
                value_datasoruce.push($(this).val());
            });

            dataRow.push({
                label: row_lable,
                data: value_datasoruce
            });
        });

        return {
            col_labels: col_labels,
            rows: dataRow
        };
    };
};

/* harmony default export */ __webpack_exports__["default"] = (TableEx);

/***/ })

/******/ });