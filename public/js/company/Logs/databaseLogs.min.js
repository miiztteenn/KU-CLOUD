/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "http://localhost:8080/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 675);
/******/ })
/************************************************************************/
/******/ ({

/***/ 675:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(676);


/***/ }),

/***/ 676:
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var DatabaseLogs = function DatabaseLogs() {
    var _this = this;

    _classCallCheck(this, DatabaseLogs);

    var datatableFileLogObject = null;
    var datatableLogViewer = null;
    var fileLogViewer = [];
    var filelogSelect = null;
    var fileLogList = [];
    var ModalStack = null;

    var updateDatatableFileLog = function updateDatatableFileLog() {
        var Datatable = [];
        datatableFileLogObject.fnClearTable();

        if (fileLogList.length > 0) {
            $.each(fileLogList, function (index, item) {
                var ret = [];
                ret[0] = item.file;
                ret[1] = item.size;
                ret[2] = " <center>\n                                    <button type=\"button\" class=\"btn btn-warning btn-sm btn-look-file\" index=" + index + "  data-toggle=\"tooltip\"\n                                        data-placement=\"top\" title=\"Look\">\n                                        <i class=\"fas fa-file\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-success btn-sm btn-download-file\" index=" + index + "  data-toggle=\"tooltip\"\n                                        data-placement=\"top\" title=\"Download\">\n                                        <i class=\"fas fa-arrow-down\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-danger btn-sm btn-delete-file\"  index=" + index + "  data-toggle=\"tooltip\"\n                                        data-placement=\"top\" title=\"Delete\">\n                                        <i class=\"fas fa-trash-alt\"></i>\n                                    </button>\n                                </center>";
                Datatable.push(ret);
            });
            datatableFileLogObject.fnAddData(Datatable);
        }

        $('[data-toggle="tooltip"]').tooltip();
    };

    var onlookFileClick = function onlookFileClick(index) {
        $(".log-viewer").show();
        $(".file-log-viewer").hide();
        $("#file-size").html('');
        $("#path-file").html('');
        if (datatableLogViewer === null) {
            datatableLogViewer = $('#table-log').dataTable({});

            $('#table-log').on('click', '.btn-stack', function () {
                onBtnStackClick($(this).attr('index'));
            });
        }

        $("#btn-back").unbind().click(function () {
            onBtnBackClick();
        });

        filelogSelect = null;
        filelogSelect = fileLogList[index];
        getFileLogViewer(fileLogList[index].folder, fileLogList[index].file);
    };

    var onBtnDownloadFile = function onBtnDownloadFile(index) {
        downloadFileLog(fileLogList[index].file);
    };

    var onDeleteFileClick = function onDeleteFileClick(index) {
        swal({
            title: "Are you sure?",
            text: "to delete this file : " + fileLogList[index].file,
            icon: "warning",
            buttons: true,
            dangerMode: true
        }).then(function (willDelete) {
            if (willDelete) {
                deleteFileLog(fileLogList[index].file);
            } else {
                return;
            }
        });
    };

    var downloadFileLog = function downloadFileLog(file) {
        $.ajax({
            url: END_POINT + "company/database/log/download",
            data: {
                file_name: file
            },
            success: function success(res) {
                var binaryData = [];
                binaryData.push(res);
                var a = document.createElement('a');
                var url = window.URL.createObjectURL(new Blob(binaryData, { type: "application/text" }));
                a.href = url;
                a.download = file;
                a.click();
                window.URL.revokeObjectURL(url);
            },
            error: function error(_error) {
                console.log(_error);
            }
        });
    };

    var deleteFileLog = function deleteFileLog(file) {
        $.ajax({
            url: END_POINT + "company/database/logfile",
            method: "DELETE",
            data: {
                file_name: file
            },
            success: function success(res) {
                console.log(res);
                _this.refreshDatatable();
                $("#btn-back").click();
            },
            error: function error(_error2) {
                console.log(_error2);
            }
        });
    };

    var getFileLogViewer = function getFileLogViewer(folder, file) {
        showLoadingStatus(true, $('#table-log'));
        $.ajax({
            url: END_POINT + "company/database/logfile",
            data: {
                folder: folder,
                file: file
            },
            success: function success(res) {
                fileLogViewer = res.data;
                updateDatatableFileLogViewer();
                showLoadingStatus(false, $('#table-log'));
            },
            error: function error(_error3) {
                console.log(_error3);
            }
        });
    };

    var onBtnBackClick = function onBtnBackClick() {
        $(".log-viewer").hide();
        $(".file-log-viewer").show();
    };

    var updateDatatableFileLogViewer = function updateDatatableFileLogViewer() {
        var Datatable = [];
        datatableLogViewer.fnClearTable();
        if (fileLogViewer.logs.length > 0) {
            $("#path-file").html("logs/" + fileLogViewer.current_file);
            $("#file-size").html("" + fileLogViewer.size);
            $.each(fileLogViewer.logs, function (index, item) {
                var ret = [];
                ret[0] = "<i class=\"" + item.level_img + "\" style=\"color:" + item.level_color + "\"></i> <span class=\"text-" + item.level_class + "\">" + item.level + "</span>";
                ret[1] = item.date;
                ret[2] = "<div class='text-wrap width-200'>" + item.text + "</div>";
                ret[3] = item.stack ? "<button class='btn btn-danger btn-sm btn-radius btn-stack' index=\"" + index + "\">stack</button>" : '';
                Datatable.push(ret);
            });
            datatableLogViewer.fnAddData(Datatable);
        }
    };

    var onBtnStackClick = function onBtnStackClick(index) {
        if (ModalStack === null) {
            ModalStack = " <div class=\"modal fade\" id=\"modal-stack\">\n                                <div class=\"modal-dialog modal-lg\" width:\"900px\">\n                                    <div class=\"modal-content\">\n                                        <div class=\"modal-header\">\n                                            <h5 class=\"modal-title\" id=\"title-user\">Stack</h5>\n                                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                                        </div>\n\n                                        <div class=\"modal-body\">\n                                            <textarea class=\"form-control\" style=\"width:100%;height:400px\" id=\"text-stack\" readonly></textarea>\n                                        </div>\n\n                                        <div class=\"modal-footer\">\n                                        \n                                        </div>\n                                    </div>\n                                </div>\n                            </div>";
            $('body').append(ModalStack);
        }

        $("#modal-stack").modal('show');
        $("#text-stack").html(fileLogViewer.logs[index].stack);
    };

    this.initialAndRun = function () {

        $("#btn-download-file").unbind().click(function () {
            downloadFileLog(filelogSelect.file);
        });

        $("#btn_delete_file").unbind().click(function () {
            swal({
                title: "Are you sure?",
                text: "to delete this file : " + filelogSelect.file,
                icon: "warning",
                buttons: true,
                dangerMode: true
            }).then(function (willDelete) {
                if (willDelete) {
                    deleteFileLog(filelogSelect.file);
                } else {
                    return;
                }
            });
        });

        _this.refreshDatatable();
    };

    var initialDatatable = function initialDatatable() {
        if (datatableFileLogObject !== null) {
            return false;
        }

        datatableFileLogObject = $("#table-file-log").dataTable({});

        $('#table-file-log').on('click', '.btn-look-file', function () {
            onlookFileClick($(this).attr('index'));
        });

        $('#table-file-log').on('click', '.btn-download-file', function () {
            onBtnDownloadFile($(this).attr('index'));
        });

        $('#table-file-log').on('click', '.btn-delete-file', function () {
            onDeleteFileClick($(this).attr('index'));
        });
    };

    var showLoadingStatus = function showLoadingStatus(show, datatable) {
        if (show) {
            $(".dataTables_wrapper").hide();
            datatable.hide();
            $('.lds-roller').show();
        } else {
            $(".dataTables_wrapper").show();
            datatable.show();
            $('.lds-roller').hide();
        }
    };

    this.refreshDatatable = function () {
        showLoadingStatus(true, $('#table-file-log'));
        $.ajax({
            url: END_POINT + "company/database/log/file",
            method: 'GET',
            success: function success(res) {
                console.log(res);
                initialDatatable();
                fileLogList = res.file_log.files;
                updateDatatableFileLog();
                showLoadingStatus(false, $('#table-file-log'));
                $("#total_size").html("Size : " + res.file_log.size_total);
            },
            error: function error(_error4) {
                console.log(_error4);
            }
        });
    };
};

$(document).ready(function () {
    var databaseLogs = new DatabaseLogs();
    databaseLogs.initialAndRun();
});

/***/ })

/******/ });