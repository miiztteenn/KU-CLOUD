/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "http://localhost:8080/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 633);
/******/ })
/************************************************************************/
/******/ ({

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(6);


/***/ }),

/***/ 5:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export showLoadingModal */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "f", function() { return deepCopy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "e", function() { return convertHex; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "j", function() { return randomHexColor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return LOADING; });
/* unused harmony export getTime */
/* unused harmony export aproximateHour */
/* unused harmony export filter_hour */
/* unused harmony export ERROR_INPUT */
/* harmony export (immutable) */ __webpack_exports__["b"] = addEventValidate;
/* harmony export (immutable) */ __webpack_exports__["d"] = checkError;
/* harmony export (immutable) */ __webpack_exports__["l"] = showErrorsForInputCustom;
/* harmony export (immutable) */ __webpack_exports__["k"] = resetInputValidate;
/* harmony export (immutable) */ __webpack_exports__["g"] = getFlatObject;
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return getFlatObjectV2; });
/* harmony export (immutable) */ __webpack_exports__["i"] = getRndInteger;
/* unused harmony export diff_hours */
/* harmony export (immutable) */ __webpack_exports__["c"] = checkAuthRes;
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator__);


var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _asyncToGenerator(fn) {
    return function () {
        var gen = fn.apply(this, arguments);return new Promise(function (resolve, reject) {
            function step(key, arg) {
                try {
                    var info = gen[key](arg);var value = info.value;
                } catch (error) {
                    reject(error);return;
                }if (info.done) {
                    resolve(value);
                } else {
                    return Promise.resolve(value).then(function (value) {
                        step("next", value);
                    }, function (err) {
                        step("throw", err);
                    });
                }
            }return step("next");
        });
    };
}

var showLoadingModal = function showLoadingModal(el, status) {
    var loading = " <div id=\"loading-save\" style=\"display:none;\">\n                        <div class=\"lds-ring\">\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                            <div></div>\n                        </div>\n                        <h6 class='text-center'>Saving Data ...</h6>\n                    </div>";
    var _el = el;

    if (!_el.find("#loading-save").length) {
        _el.find(".modal-body").after(loading);
    }

    if (status) {
        _el.find("form").hide();
        _el.find(".modal-footer").hide();
        _el.find("#loading-save").show();
    } else {
        _el.find("form").show();
        _el.find(".modal-footer").show();
        _el.find("#loading-save").hide();
    }
};

var deepCopy = function deepCopy(data) {
    return data.map(function (item) {
        return Object.assign({}, item);
    });
};

var convertHex = function convertHex(hex, opacity) {
    hex = hex.replace('#', '');
    var r = parseInt(hex.substring(0, 2), 16);
    var g = parseInt(hex.substring(2, 4), 16);
    var b = parseInt(hex.substring(4, 6), 16);

    var result = 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';
    return result;
};

var randomHexColor = function randomHexColor() {
    return '#' + (Math.random() * 0xFFFFFF << 0).toString(16);
};

var resetText = null;

var LOADING = {
    set: function set(el) {
        resetText = el.html();
        var textLoading = el.attr('data-loading-text');
        el.html(textLoading);
        el.prop('disabled', true);
    },
    reset: function reset(el) {
        el.html(resetText);
        el.prop('disabled', false);
    }
};

function getTime(hours, minutes) {
    var time = null;
    minutes = minutes + "";
    if (hours < 12) {
        time = "AM";
    } else {
        time = "PM";
    }
    if (hours == 0) {
        hours = 12;
    }
    if (hours > 12) {
        hours = hours - 12;
    }
    if (minutes.length == 1) {
        minutes = "0" + minutes;
    }
    return hours + ":" + minutes + " " + time;
}

function aproximateHour(mins) {
    var minutes = Math.round(mins % 60);
    if (minutes == 60 || minutes == 0) {
        return mins / 60;
    }
    return Math.trunc(mins / 60) + minutes / 100;
}

function filter_hour(value, type) {
    return value % 60 == 0 ? 1 : 0;
}

var ERROR_INPUT = {
    set: function set(target, errorList) {
        $(".text-alert").remove();
        Object.keys(target).map(function (key) {
            if (errorList[key]) {
                $(target[key].el).removeClass('input-error');
                $(target[key].el).addClass('input-error');
                $(target[key].el).after("<p class=\"text-alert small\" style=\"color:red\">" + errorList[key] + "</p>");

                $(target[key].el).focus(function () {
                    $(target[key].el).removeClass('input-error');
                    $(target[key].el).next(".text-alert").remove();
                });

                setTimeout(function () {
                    $(target[key].el).removeClass('input-error');
                    $(".text-alert").remove();
                }, 6000);
            }
        });
    },
    reset: function reset(el) {
        $(el).removeClass('input-error');
        $(".text-alert").remove();
    }
};

function addEventValidate(validateInput) {
    var inputs = $(validateInput.parent).find("input, textarea, select");
    $(validateInput.parent).on('change', 'input, textarea, select', function () {
        var elInput = $(this);
        var check = {};
        var attr = "";
        //inputs.each(function () {
        attr = $(this).attr('name');
        var val = $(this).val();
        // console.log(val)
        check[attr] = val == '' ? null : val;
        //})
        var errors = validate(check, validateInput.validate) || {};
        console.log(elInput, errors);
        showErrorsForInput(elInput, errors[elInput.attr('name')]);
    });

    // inputs.each(function () {
    //     $(this).change(function () {
    //         // let attr = $(this).attr('name');
    //         // let val = $(this).val();
    //         // let check = {};
    //         // check[attr] = val == '' ? null : val;
    //         // let errors = validate(check, validateInput.validate) || {};
    //         // console.log(attr, check[attr], errors);
    //         // showErrorsForInput($(this), errors[attr]);
    //         let elInput = $(this);
    //         let check = {};
    //         let attr = "";
    //         //inputs.each(function () {
    //             attr = $(this).attr('name');
    //             let val = $(this).val();
    //             console.log(val)
    //             check[attr] = val == '' ? null : val;
    //        // })
    //         let errors = validate(check, validateInput.validate) || {};
    //         console.log(elInput, errors);
    //         showErrorsForInput(elInput, errors[elInput.attr('name')]);
    //     });
    // })
}

function showErrors(validateInput, errors) {
    var inputs = $(validateInput.parent).find("input, textarea, select");
    console.log(errors);
    // let isError = true;
    // inputs.each(function () {
    //     let attr = $(this).attr('name');
    //     let val = $(this).val();
    //     let check = {};
    //     check[attr] = val == '' ? null : val;
    //     let errors = validate(check, validateInput.validate) || {};
    //     showErrorsForInput($(this), errors[attr]);
    // })
    // return isError;
    var key = Object.keys(errors);
    inputs.each(function () {
        var elInput = $(this);
        var attr = elInput.attr('name');
        key.map(function (_key) {
            if (_key === attr) {
                showErrorsForInput(elInput, errors[attr]);
            }
        });
    });
}

function checkError(validateInput) {
    var inputs = $(validateInput.parent).find("input, textarea, select");
    var isError = true;
    var check = {};
    inputs.each(function () {
        var attr = $(this).attr('name');
        var val = $(this).val();
        check[attr] = val == '' ? null : val;
    });
    var errors = validate(check, validateInput.validate) || {};
    if (!validate.isEmpty(errors)) {
        showErrors(validateInput, errors);
        isError = true;
    } else {
        isError = false;
    }
    return isError;
}

// Shows the errors for a specific input
function showErrorsForInput(input, errors) {
    if (!validate.isEmpty(errors)) {
        input.removeClass("has-success");
        input.addClass("has-error");
        if (input.parent().find(".messages-error").length > 0) {
            //input.parent().addClass("has-error");
            input.parent().find(".messages-error").html(errors[0]);
        } else {
            //input.parent().addClass("has-error");
            input.parent().parent().find(".messages-error").html(errors[0]);
        }
    } else {
        input.removeClass("has-error");
        input.addClass("has-success");
        if (input.parent().find(".messages-error").length > 0) {
            //input.parent().addClass("has-success");
            input.parent().find(".messages-error").html('');
        } else {
            //input.parent().addClass("has-success");
            input.parent().parent().find(".messages-error").html('');
        }
    }
}

function showErrorsForInputCustom(input, errors) {
    //console.log(input, errors);
    if (!validate.isEmpty(errors)) {
        input.removeClass("has-success");
        input.addClass("has-error");
        input.parent().find(".messages-error").html(errors);
    } else {
        input.removeClass("has-error");
        input.addClass("has-success");
        input.parent().find(".messages-error").html('');
    }
}

function resetInputValidate() {
    $("input, textarea, select").removeClass('has-success');
    $("input, textarea, select").removeClass('has-error');
    $(".messages-error").html('');
}

function getFlatObject(object) {
    function iter(o, p) {
        if (Array.isArray(o)) {
            o.forEach(function (a, i) {
                iter(a, p.concat(i));
            });
            return;
        }
        if (o !== null && (typeof o === "undefined" ? "undefined" : _typeof(o)) === 'object') {
            Object.keys(o).forEach(function (k) {
                iter(o[k], p.concat(k));
            });
            return;
        }
        path[p.join('/')] = o;
    }

    var path = {};
    iter(object, []);
    return path;
}

var getFlatObjectV2 = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.mark(function _callee(object) {
        var iter, path;
        return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_regenerator___default.a.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        iter = function iter(o, p) {
                            if (Array.isArray(o)) {
                                o.forEach(function (a, i) {
                                    iter(a, p.concat(i));
                                });
                                return;
                            }
                            if (o !== null && (typeof o === "undefined" ? "undefined" : _typeof(o)) === 'object') {
                                Object.keys(o).forEach(function (k) {
                                    iter(o[k], p.concat(k));
                                });
                                return;
                            }
                            path[p.join('.')] = o;
                        };

                        path = {};

                        iter(object, []);
                        return _context.abrupt("return", path);

                    case 4:
                    case "end":
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function getFlatObjectV2(_x) {
        return _ref.apply(this, arguments);
    };
}();

function getRndInteger(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
}

function diff_hours(dt2, dt1) {

    var diff = (dt2.getTime() - dt1.getTime()) / 1000;
    diff /= 60 * 60;
    return Math.abs(Math.round(diff));
}

function checkAuthRes(xhr) {
    if (xhr.getResponseHeader('authorization')) {
        var token = xhr.getResponseHeader('authorization').split(" ")[1];
        // $.ajax({
        //     url : "http://localhost:8000/SetCookie",
        //     method:"POST",
        //     data : {
        //         token : token
        //     },
        //     success : (res) => {
        //         console.log(res);
        //     },
        //     error :(res) =>{
        //         console.log(res)
        //     }
        // })
        setCookie('token', token);
    }
}

/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var regeneratorRuntime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return Promise.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return Promise.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new Promise(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList) {
    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList)
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : {}
));


/***/ }),

/***/ 633:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(634);


/***/ }),

/***/ 634:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utility_js__ = __webpack_require__(5);


toastr.options = {
    "closeButton": false,
    "debug": false,
    "newestOnTop": false,
    "progressBar": true,
    "positionClass": "toast-top-right",
    "preventDuplicates": false,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "3000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
};

var provinces = null;
var amphures = null;
var districts = null;

validate.validators.presence.message = "is required";

var validateInput = {
    company: {
        parent: "",
        validate: {
            companyname: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            },
            alias: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            },
            note: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            }
        }
    },
    account: {
        parent: "",
        validate: {
            email: {
                presence: true,
                email: true
            },
            firstname: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            },
            lastname: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            },
            phone: {
                presence: {
                    allowEmpty: false
                },
                format: {
                    pattern: "[0-9]+",
                    flags: "i",
                    message: "can only contain 0-9"
                },
                length: {
                    minimum: 10,
                    maximum: 10
                }
            },
            username: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50
                }
            }
        }
    },
    address: {
        parent: "",
        validate: {
            address_detail: {
                presence: {
                    allowEmpty: false
                }
            },
            province: {
                presence: {
                    allowEmpty: false
                }
            },
            amphure: {
                presence: {
                    allowEmpty: false
                }
            },
            district: {
                presence: {
                    allowEmpty: false
                }
            },
            zip_code: {
                presence: {
                    allowEmpty: false
                }
            }
        }
    }
};

var CompanyRepository = new function () {
    var _this = this;

    var companyList = [];
    var datatableObject = null;
    var modelCreate = null;
    var modalDetail = null;
    var modalEdit = null;
    var modalDelete = null;

    /* Initial Function */
    this.initialAndRun = function () {
        _this.refreshDatatable();
    };

    this.refreshDatatable = function () {
        showLoadingStatus(true);
        $.ajax({
            url: END_POINT + "admin/companydata",
            method: 'GET',
            success: function success(result, textStatus, xhr) {
                Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
                initialDatatable();

                companyList = result.company;
                showLoadingStatus(false);
                updateDatatableData(result);
            },
            error: function error(_error) {
                console.log(_error);
            }
        });
    };

    var initialDatatable = function initialDatatable() {
        if (datatableObject !== null) {
            return false;
        }

        $("#btn-create").unbind().click(function () {
            onCreateClick();
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["k" /* resetInputValidate */])();
        });

        datatableObject = $('#datatable-company').dataTable();
    };

    var showLoadingStatus = function showLoadingStatus(show) {
        if (show) {
            $('#datatable-company').hide();
            $('#total-company').hide();
        } else {
            $('#datatable-company').show();
            $('.text-static').show();
            $('#total-company').show();
            $('.lds-roller').hide();
            $('.text-loading').hide();
        }
    };

    var updateDatatableData = function updateDatatableData(companyList) {
        var Datatable = new Array();
        datatableObject.fnClearTable();
        var total_company = 0;
        $.each(companyList.company, function (index, item) {
            var ret = [];
            ret[0] = item.company_name;
            ret[1] = item.alias;
            ret[2] = item.note;
            ret[3] = " <center>\n                            <button type=\"button\" class=\"btn btn-primary btn-sm btn-detail\" index=" + index + " data-toggle=\"tooltip\"\n                                data-placement=\"top\" title=\"Detail\">\n                                <i class=\"fas fa-list\"></i>\n                            </button>\n                            <button type=\"button\" class=\"btn btn-success btn-sm btn-edit\" index=" + index + "  data-toggle=\"tooltip\"\n                                data-placement=\"top\" title=\"Edit\">\n                                <i class=\"fas fa-edit\"></i>\n                            </button>\n                            <button type=\"button\" class=\"btn btn-danger btn-sm btn-delete\"  index=" + index + "  data-toggle=\"tooltip\"\n                                data-placement=\"top\" title=\"Delete\">\n                                <i class=\"fas fa-trash-alt\"></i>\n                            </button>\n                        </center>";
            Datatable.push(ret);
            total_company++;
        });

        if (Datatable.length > 0) {
            datatableObject.fnAddData(Datatable);
        }

        $("#total-company").html("Total " + total_company + " Company");
        $('#datatable-company').on('click', '.btn-detail', function () {
            onDetailClick($(this).attr('index'));
        });

        $('#datatable-company').on('click', '.btn-edit', function () {
            onEditClick($(this).attr('index'));
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["k" /* resetInputValidate */])();
        });

        $('#datatable-company').on('click', '.btn-delete', function () {
            onDeleteClick($(this).attr('index'));
        });

        $('[data-toggle="tooltip"]').tooltip();
    };

    /* Action Function */
    var onCreateClick = function onCreateClick() {
        if (modelCreate === null) {
            modelCreate = "<div class=\"modal fade\" id=\"addUser\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Create Company</h4>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form id=\"form-add-company\">\n                                <div class=\"container\"> \n                                    <h4>Company detail</h4>       \n                                    <div class=\"row\">\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"\">Company Name <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"companyname\" class=\"form-control\" id=\"add_company_name_val\" />\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"\">Alias <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"alias\" class=\"form-control\" id=\"add_alias_val\" />\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"address\">Note <span class=\"text-danger\">*</span></label>\n                                            <textarea name=\"note\" id=\"add_note_val\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"address\">Address <span class=\"text-danger\">*</span></label>\n                                            <textarea name=\"address_detail\" id=\"address_create\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"province\">Province <span class=\"text-danger\">*</span></label>\n                                            <select name=\"province\" id=\"province_create\" class=\"form-control\">\n                                                <option value=\"\">--Select provice--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"amphure\">Amphure <span class=\"text-danger\">*</span></label>\n                                            <select name=\"amphure\" id=\"amphure_create\" class=\"form-control\">\n                                                <option value=\"\">--Select amphure--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"district\">District <span class=\"text-danger\">*</span></label>\n                                            <select name=\"district\" id=\"district_create\" class=\"form-control\">\n                                                <option value=\"\">--Select district--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"zip_code\">Zip code <span class=\"text-danger\">*</span></label>\n                                            <input name=\"zip_code\" id=\"zip_code_create\" class=\"form-control\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <hr>\n                                    <h4>User detail</h4> \n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"account\">Username <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"username\" class=\"form-control\" id=\"accountname\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"firstname\">Firstname <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"firstname\" class=\"form-control\" id=\"firstname\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"lname\">Lastname <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"lastname\" class=\"form-control\" id=\"lastname\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"email\">Email address <span class=\"text-danger\">*</span></label>\n                                            <input type=\"email\" name=\"email\" class=\"form-control\" id=\"email\" autocomplete=\"nope\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"phone\">Phone <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"phone\" class=\"form-control\" id=\"phone\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>              \n                        <div class=\"modal-footer\">\n                            <button type=\"button\" id=\"btn-create-save\" class=\"btn btn-success btn-block btn-submit-create\" data-loading-text=\"<i class='fas fa-circle-notch fa-spin'></i> Saving . . .\">Save</button>\n                        </div>          \n                    </div>\n                </div>\n            </div>";
            $('body').append(modelCreate);
        }

        $("#addUser").on("hidden.bs.modal", function () {
            $(this).find("input,textarea,select").val('').end();
        });

        $("#btn-create-save").unbind().click(function () {
            validateInput.company.parent = "form#form-add-company";
            validateInput.account.parent = "form#form-add-company";
            validateInput.address.parent = "form#form-add-company";

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["b" /* addEventValidate */])(validateInput.company);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["b" /* addEventValidate */])(validateInput.account);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["b" /* addEventValidate */])(validateInput.address);

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.company);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.account);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.address);

            if (Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.company) || Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.account) || Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.address)) return;

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["k" /* resetInputValidate */])();

            createSaveChange($(this));
        });

        $("#province_create").change(function () {
            $("#zip_code_create").val('');
            if ($(this).val() != "") {
                $("#district_create").html("<option value=\"\">--Select district--</option>");
                getAmphuresByProvince($(this).val(), "create");
            } else {
                $("#district_create").html("<option value=\"\">--Select district--</option>");
                $("#amphure_create").html("<option value=\"\">--Select amphure--</option>");
            }
        });

        $("#amphure_create").change(function () {
            $("#zip_code_create").val('');
            if ($(this).val() != "") {
                getDistrictsByAmphures($("#province_create").val(), $(this).val(), "create");
            } else {
                $("#district_create").html("<option value=\"\">--Select district--</option>");
            }
        });

        $("#district_create").change(function () {
            var _this2 = this;

            $("#zip_code_create").val('');
            if ($(this).val() != "") {
                var district = districts.filter(function (data) {
                    return data.district_id === $(_this2).val();
                });
                console.log(district);
                $("#zip_code_create").val(district[0].zip_code);
            } else {
                $("#zip_code_create").val('');
            }
        });

        getProvinces("create");

        $('#addUser').modal('show');
    };

    var createSaveChange = function createSaveChange() {
        __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].set($("#btn-create-save"));
        var company_name_input = $("#add_company_name_val").val();
        var alias_input = $("#add_alias_val").val();
        var note_input = $("#add_note_val").val();
        var address_detail = $("#address_create").val();
        var province = $("#province_create").val();
        var amphure = $("#amphure_create").val();
        var district = $("#district_create").val();
        var accountname = $("#accountname").val();
        var firstname = $("#firstname").val();
        var lastname = $("#lastname").val();
        var email = $("#email").val();
        var phone = $("#phone").val();

        $.ajax({
            url: END_POINT + "admin/companydata/create",
            dataType: 'json',
            method: "POST",
            data: {
                company_name_input: company_name_input,
                alias_input: alias_input,
                note_input: note_input,
                address_detail: address_detail,
                province: province,
                amphure: amphure,
                district: district,
                accountname: accountname,
                firstname: firstname,
                lastname: lastname,
                email: email,
                phone: phone,
                admincheck: "true"
            },
            success: function success(res, textStatus, xhr) {
                Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
                toastr["success"]("Success");
                __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].reset($("#btn-create-save"));
                _this.refreshDatatable();
                $("#addUser").modal('hide');
                $("#addUser").find("input,textarea,select").val('').end();
            },
            error: function error(res) {
                console.log(res);
                __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].reset($("#btn-create-save"));
            }
        });
    };

    var onDetailClick = function onDetailClick(key) {
        if (modalDetail === null) {
            modalDetail = "<div class=\"modal fade\" id=\"detailCompany\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h5 class=\"modal-title\" id=\"title-company\">Company Details</h5>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"container\">\n                                <div class=\"row\">\n                                    <div class=\"col-xl-6 col-12 mt-2\">\n                                        <label for=\"\">Company Name</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"company_name_detail\" readonly/>\n                                    </div>\n                                    <div class=\"col-xl-6 col-12 mt-2\">\n                                        <label for=\"\">Alias</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"alias_detail\" readonly/>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-12 mt-2\">\n                                        <label for=\"address\">Note</label>\n                                        <textarea name=\"note\" id=\"note_detail\" cols=\"30\" rows=\"5\" class=\"form-control\" readonly></textarea>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-12 mt-2\">\n                                        <label for=\"address\">Address</label>\n                                        <textarea name=\"address_detail\" id=\"address_detail\" cols=\"30\" rows=\"5\" class=\"form-control\" readonly></textarea>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-12 mt-2\">\n                                        <label for=\"province\">Province</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"province_detail\" readonly/>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-12 mt-2\">\n                                        <label for=\"amphure\">Amphure</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"amphure_detail\" readonly/>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-xl-6 col-12 mt-2\">\n                                        <label for=\"district\">District</label>\n                                        <input type=\"text\" class=\"form-control\" id=\"district_detail\" readonly/>\n                                    </div>\n                                    <div class=\"col-xl-6 col-12 mt-2\">\n                                        <label for=\"zip_code\">Zip code</label>\n                                        <input name=\"zip_code\" id=\"zip_code_detail\" class=\"form-control\" readonly/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>";

            $('body').append(modalDetail);
        }

        $('#company_name_detail').val(companyList[key].company_name);
        $('#alias_detail').val(companyList[key].alias);
        $('#note_detail').val(companyList[key].note);
        $('#address_detail').val(companyList[key].address_detail);
        $('#province_detail').val(companyList[key].pNameTh);
        $('#amphure_detail').val(companyList[key].aNameTh);
        $('#district_detail').val(companyList[key].dNameTh);
        $('#zip_code_detail').val(companyList[key].zip_code);

        $("#detailCompany").modal('show');
    };

    var onEditClick = function onEditClick(key) {
        if (modalEdit === null) {
            modalEdit = "<div class=\"modal fade\" id=\"editCompany\">\n                <div class=\"modal-dialog modal-lg\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Edit Company</h4>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form id=\"form-edit-company\"> \n                                <div class=\"container\">\n                                    <div class=\"row\">\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"\">Company Name <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"companyname\" class=\"form-control\" id=\"company_name_edit\" />\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"\">Alias <span class=\"text-danger\">*</span></label>\n                                            <input type=\"text\" name=\"alias\" class=\"form-control\" id=\"alias_edit\" />\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"address\">Note <span class=\"text-danger\">*</span></label>\n                                            <textarea name=\"note\" id=\"note_edit\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"address\">Address <span class=\"text-danger\">*</span></label>\n                                            <textarea name=\"address_detail\" id=\"address_edit\" cols=\"30\" rows=\"5\" class=\"form-control\"></textarea>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"province\">Province <span class=\"text-danger\">*</span></label>\n                                            <select name=\"province\" id=\"province_edit\" class=\"form-control\">\n                                                <option value=\"\">--Select provice--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-12 mt-2\">\n                                            <label for=\"amphure\">Amphure <span class=\"text-danger\">*</span></label>\n                                            <select name=\"amphure\" id=\"amphure_edit\" class=\"form-control\">\n                                                <option value=\"\">--Select amphure--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                    <div class=\"row\">\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"district\">District <span class=\"text-danger\">*</span></label>\n                                            <select name=\"district\" id=\"district_edit\" class=\"form-control\">\n                                                <option value=\"\">--Select district--</option>\n                                            </select>\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                        <div class=\"col-xl-6 col-12 mt-2\">\n                                            <label for=\"zip_code\">Zip code <span class=\"text-danger\">*</span></label>\n                                            <input name=\"zip_code\" id=\"zip_code_edit\" class=\"form-control\">\n                                            <small class=\"messages-error\"></small>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" id=\"btn-edit-submit\"  class=\"btn btn-success btn-block btn-submit-edit\" data-loading-text=\"<i class='fas fa-circle-notch fa-spin'></i> Saving . . .\">Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>";

            $('body').append(modalEdit);
        }

        $("#province_edit").change(function () {
            $("#zip_code_edit").val('');
            if ($(this).val() != "") {
                $("#district_edit").html("<option value=\"\">--Select district--</option>");
                getAmphuresByProvince($(this).val(), "edit", companyList[key].amphure_id);
            } else {
                $("#district_edit").html("<option value=\"\">--Select district--</option>");
                $("#amphure_edit").html("<option value=\"\">--Select amphure--</option>");
            }
        });

        $("#amphure_edit").change(function () {
            $("#zip_code_edit").val('');
            if ($(this).val() != "") {
                getDistrictsByAmphures($("#province_edit").val(), $(this).val(), "edit", companyList[key].district_id);
            } else {
                $("#district_edit").html("<option value=\"\">--Select district--</option>");
            }
        });

        $("#district_edit").change(function () {
            var _this3 = this;

            $("#zip_code_edit").val('');
            if ($(this).val() != "") {
                var district = districts.filter(function (data) {
                    return data.district_id === $(_this3).val();
                });
                console.log(district);
                $("#zip_code_edit").val(district[0].zip_code);
            } else {
                $("#zip_code_edit").val('');
            }
        });

        getProvinces("edit", companyList[key].province_id);
        getAmphuresByProvince(companyList[key].province_id, "edit", companyList[key].amphure_id);
        getDistrictsByAmphures(companyList[key].province_id, companyList[key].amphure_id, "edit", companyList[key].district_id);

        $('#company_name_edit').val(companyList[key].company_name);
        $('#alias_edit').val(companyList[key].alias);
        $('#note_edit').val(companyList[key].note);
        $('#address_edit').val(companyList[key].address_detail);
        $('#zip_code_edit').val(companyList[key].zip_code);

        $("#btn-edit-submit").unbind().click(function () {

            validateInput.company.parent = "form#form-edit-company";
            validateInput.address.parent = "form#form-edit-company";

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["b" /* addEventValidate */])(validateInput.company);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["b" /* addEventValidate */])(validateInput.address);

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.company);
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.address);

            if (Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.company) || Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["d" /* checkError */])(validateInput.address)) return;

            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["k" /* resetInputValidate */])();

            editSaveChange(key);
        });

        $('#editCompany').modal('show');
    };

    var editSaveChange = function editSaveChange(key) {
        __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].set($("#btn-edit-submit"));
        var company_name_input = $("#company_name_edit").val();
        var alias_input = $("#alias_edit").val();
        var note_input = $("#note_edit").val();
        var address_detail = $("#address_edit").val();
        var province = $("#province_edit").val();
        var amphure = $("#amphure_edit").val();
        var district = $("#district_edit").val();

        $.ajax({
            url: END_POINT + "admin/companydata/edit",
            dataType: 'json',
            method: "PUT",
            data: {
                company_id_input: companyList[key].company_id,
                company_name_input: company_name_input,
                alias_input: alias_input,
                note_input: note_input,
                address_detail: address_detail,
                province: province,
                amphure: amphure,
                district: district
            },
            success: function success(res, textStatus, xhr) {
                Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
                __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].reset($("#btn-edit-submit"));
                toastr["success"]("Success");
                _this.refreshDatatable();
                $("#editCompany").modal('hide');
            },
            error: function error(res) {
                __WEBPACK_IMPORTED_MODULE_0__utility_js__["a" /* LOADING */].reset($("#btn-edit-submit"));
                console.log(res);
            }
        });
    };

    var onDeleteClick = function onDeleteClick(key) {
        if (modalDelete === null) {
            modalDelete = "<div class=\"modal fade\" id=\"DeleteUser\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h4 class=\"modal-title\">Delete User Company</h4>\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form id=\"form-delete-user\">\n                                <h6 id=\"span-text-confirm\"></h6>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" id=\"btn-delete-submit\" class=\"btn btn-danger btn-block\">Delete</button>\n                        </div>\n                    </div>\n                </div>\n            </div>";

            $('body').append(modalDelete);
        }

        $.ajax({
            url: END_POINT + "admin/companydata/checkdelete",
            method: "GET",
            data: {
                company_id: companyList[key].id
            },
            success: function success(result, textStatus, xhr) {
                Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
                if (result) {
                    $('#span-text-confirm').html("Are you sure to delete " + companyList[key].name + " ? ");
                    $('#btn-delete-submit').show();
                } else {
                    $('#span-text-confirm').html("Cannot delete.");
                    $('#btn-delete-submit').hide();
                }
            },
            error: function error(res) {
                console.log(res);
            }
        });

        $("#btn-delete-submit").unbind().click(function () {
            deleteSaveChange(key);
        });

        $('#DeleteUser').modal('show');
    };

    var deleteSaveChange = function deleteSaveChange(key) {
        $.ajax({
            url: END_POINT + "admin/companydata/delete",
            method: "DELETE",
            data: {
                company_id: companyList[key].id
            },
            success: function success(result, textStatus, xhr) {
                Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
                _this.refreshDatatable();
                $("#DeleteUser").modal('hide');
            },
            error: function error(res) {
                console.log(res);
            }
        });
    };
}();

/* Set initial value */
$(document).ready(function () {
    var companyTable = CompanyRepository;
    companyTable.initialAndRun({});
});

var createSelectProvices = function createSelectProvices(input_type, value) {
    var html = "<option value=\"\">--Select province--</option>";
    provinces.map(function (data) {
        html += "<option value=\"" + data.province_id + "\">" + data.name_th + " " + data.name_en + "</option>";
    });

    $("#province_" + input_type).html(html);

    if (input_type == "edit") {
        $('#province_' + input_type).val(value);
    }
};

var getProvinces = function getProvinces(input_type, value) {
    $.ajax({
        url: END_POINT + 'address/provinces',
        method: 'GET',
        success: function success(res, textStatus, xhr) {
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
            provinces = res.data;
            createSelectProvices(input_type, value);
        },
        error: function error(res) {
            console.log(res);
        }
    });
};

var createSelectAmphures = function createSelectAmphures(input_type, value) {
    var html = "<option value=\"\">--Select amphure--</option>";
    amphures.map(function (data) {
        html += "<option value=\"" + data.amphure_id + "\">" + data.name_th + " " + data.name_en + "</option>";
    });

    $("#amphure_" + input_type).html(html);

    if (input_type == "edit") {
        $('#amphure_' + input_type).val(value);
    }
};

var getAmphuresByProvince = function getAmphuresByProvince($province_id, input_type, value) {
    $.ajax({
        url: END_POINT + ("address/amphures/province/" + $province_id),
        method: 'GET',
        success: function success(res, textStatus, xhr) {
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
            amphures = res.data;
            createSelectAmphures(input_type, value);
        },
        error: function error(res) {
            console.log(res);
        }
    });
};

var createSelectdistrict = function createSelectdistrict(input_type, value) {
    var html = "<option value=\"\">--Select district--</option>";
    districts.map(function (data) {
        html += "<option value=\"" + data.district_id + "\">" + data.name_th + " " + data.name_en + "</option>";
    });

    $("#district_" + input_type).html(html);

    if (input_type == "edit") {
        $('#district_' + input_type).val(value);
    }
};

var getDistrictsByAmphures = function getDistrictsByAmphures(province_id, amphure_id, input_type, value) {
    $.ajax({
        url: END_POINT + ("address/districts/province/" + province_id + "/amphure/" + amphure_id),
        method: 'GET',
        success: function success(res, textStatus, xhr) {
            Object(__WEBPACK_IMPORTED_MODULE_0__utility_js__["c" /* checkAuthRes */])(xhr);
            districts = res.data;
            createSelectdistrict(input_type, value);
        },
        error: function error(res) {
            console.log(res);
        }
    });
};

/***/ })

/******/ });