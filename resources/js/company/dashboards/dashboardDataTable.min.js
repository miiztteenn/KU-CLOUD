import { LOADING,checkAuthRes } from '../../utility';

const END_POINT = 'http://localhost:8000/api/';
const END_POINT_WED = 'http://localhost:8000/';

const API = {
    getStaticDashboard : "dashboards",
    addStaticDashboard : "dashboards",
    editStaticDashboard : "dashboards",
    deleteStaticDashboard : "dashboards", 
}

class staticDataTable {
    constructor() {
        let staticDataTable = null;
        let staticList = null;
        let modalEdit = null;
        let modalDelete = null;


        let bindElement = () => {
            $("#btn-add-static").click(function () {
                $("#addStatic").modal('show');
            });

            $("#btn-save-add-static").click(function () {
                addStaticDashboard();
            });
        };

        let addStaticDashboard = () => {
            LOADING.set($("#btn-save-add-static"));
            let static_name = $("#static-name").val();
            $.ajax({
                url: END_POINT + API.addStaticDashboard,
                method: 'POST',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    name: static_name,
                },
                success: (res,textStatus,xhr) => {
                    checkAuthRes(xhr);
                    console.log(res);
                    $("#addStatic").modal('hide');
                    LOADING.reset($("#btn-save-add-static"));
                    this.showLastestDatatable();
                },
                error: (res) => {
                    console.log(res);
                    LOADING.reset($("#btn-save-add-static"));
                }
            });
        };

        let updateDatatableData = () => {
            let Datatable = [];
            staticDataTable.fnClearTable();
            $.each(staticList, function (index, item) {
                let ret = [];
                ret[0] = item.name;
                ret[1] = item.fname + ' ' +item.lname;
                ret[2] = `<center>
                            <button type="button" class="btn btn-primary btn-sm btn-lookup" key=${item.dashboard_id} data-toggle="tooltip"
                                data-placement="top" title="Look">
                                <i class="fas fa-search"></i>
                            </button>
                            <button type="button" class="btn btn-success btn-sm btn-edit" index=${index}  data-toggle="tooltip"
                                data-placement="top" title="Edit">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button type="button" class="btn btn-danger btn-sm btn-delete" index=${index}  data-toggle="tooltip"
                                data-placement="top" title="Delete">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                          </center>`;
                Datatable.push(ret);
            });
            
            if(Datatable.length > 0)
            staticDataTable.fnAddData(Datatable);

            $(".btn-lookup").unbind().click(function () {
                onBtnLookupClick($(this).attr('key'));
            });

            $(".btn-edit").unbind().click(function () {
                onBtnEditClick($(this).attr('index'));
            });

            $(".btn-delete").unbind().click(function () {
                onBtnDeleteClick($(this).attr('index'));
            });

            $('[data-toggle="tooltip"]').tooltip();
        };

        let onBtnLookupClick = (key) => {
            window.location.href = END_POINT_WED + "Dashboards/" + key;
        };

        let onBtnEditClick = (key) => {
            if (modalEdit === null) {
                modalEdit = `
                <div class="modal fade" id="editStatic">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Edit Static</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-12">
                                        <label>Name</label>
                                        <input type="text" class="form-control" id="edit_static_name">
                                    </div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" id="btn-edit-submit" class="btn btn-success btn-block" data-loading-text="<i class='fas fa-circle-notch fa-spin'></i> Saving . . .">Save</button>
                            </div>
                        </div>
                    </div>
                </div>`;

                $('body').append(modalEdit);
            }

            $("#btn-edit-submit").unbind().click(function () {
                onBtnSubmitEditClick(key);
            });



            $("#edit_static_name").val(staticList[key].name);
            $("#editStatic").modal('show');
        };

        let onBtnSubmitEditClick = (key) => {
            LOADING.set($("#btn-edit-submit"));
            $.ajax({
                url: END_POINT + API.editStaticDashboard,
                method: 'PUT',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    dashboard_id: staticList[key].dashboard_id,
                    name: $("#edit_static_name").val(),
                },
                success: (res,textStatus,xhr) => {
                    checkAuthRes(xhr)
                    $("#editStatic").modal('hide');
                    LOADING.reset($("#btn-edit-submit"));
                    this.showLastestDatatable();
                },
                error: (res) => {
                    LOADING.reset($("#btn-edit-submit"));
                    console.log(res);
                }
            });
        };

        let onBtnDeleteClick = (key) => {
            if (modalDelete === null) {
                modalDelete = `
                <div class="modal fade" id="deleteStatic">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Delete Static</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-12">
                                        Are you sure to delete static name : <span id="delete-static-name"></span> ?
                                    </div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" id="btn-submit-delete" class="btn btn-danger btn-block" data-loading-text="<i class='fas fa-circle-notch fa-spin'></i> Saving . . .">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>`;

                $('body').append(modalDelete);
            }

            $("#btn-submit-delete").unbind().click(function () {
                onBtnSubmitDeleteClick(key);
            });

            $("#delete-static-name").html(staticList[key].name);

            $("#deleteStatic").modal('show');
        };

        let onBtnSubmitDeleteClick = (key) => {
            LOADING.set($("#btn-submit-delete"));
            $.ajax({
                url: END_POINT +  API.deleteStaticDashboard,
                method: "DELETE",
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    dashboard_id: staticList[key].dashboard_id,
                },
                success: (res,textStatus,xhr) => {
                    checkAuthRes(xhr)
                    LOADING.reset($("#btn-submit-delete"));
                    $("#deleteStatic").modal('hide');
                    this.showLastestDatatable();
                },
                error: (res) => {
                    LOADING.reset($("#btn-submit-delete"));
                    console.log(res);
                }

            });
        };

        let initialDatatable = () => {
            if (staticDataTable !== null) {
                return false;
            }
            staticDataTable = $('#example').dataTable({});
        };

        let showDatatableLoadingStatus = (showOrHide) => {
            if (showOrHide) {
                $(".dataTables_wrapper").hide();
                $('#example').hide();
                $('.lds-roller').show();
            }
            else {
                $(".dataTables_wrapper").show();
                $('.lds-roller').hide();
                $('.text-loading').hide();
                $('#example').show();
                $('.text-static').show();
            }
        };

        this.initialAndRun = () => {
            bindElement();
            initialDatatable();
            this.showLastestDatatable();
        };

        this.showLastestDatatable = () => {
            showDatatableLoadingStatus(true);
            $.ajax({
                url: END_POINT + API.getStaticDashboard,
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                success: (res,textStatus,xhr) => {
                    checkAuthRes(xhr)
                    showDatatableLoadingStatus(false);
                    staticList = res.data;
                    updateDatatableData();
                },
                error: (res) => {
                    showDatatableLoadingStatus(false);
                }
            });
        };
    }
}

$(document).ready(function () {
    let et = new staticDataTable();
    et.initialAndRun();
});
