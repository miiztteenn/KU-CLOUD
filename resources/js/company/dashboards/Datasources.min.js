export default class Datasources {
    constructor() {
        let listDatasource = null;
        let datasources = {
            web_service : {
                realtime: {},
                firstData: {},
            },
            iot_service : {
                realtime: {},
                firstData: {},
            }
        };
        let apiSelect = 'datasources';

        let keyInput = [];

        let dataAccess = [];

        let modalEdit = null;

        let apiCount = 0;

        let getWebServices = async () => {
            await $.ajax({
                url: END_POINT + API.getWebServices,
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    console.log(res);
                    listDatasource = res.data;
                    listDatasource.map(data => {
                        $("#list_web_service").append(`
                        <div class="custom-control custom-checkbox mb-3">
                            <input type="checkbox" class="custom-control-input" id="id_${data.webservice_id}"  value="${data.webservice_id}" name="webservice_id">
                            <label class="custom-control-label" for="id_${data.webservice_id}" >${data.service_name}</label>
                        </div>`)
                        //$("#webservice_id").append(`<option value="${data.webservice_id}">${data.service_name}</option>`);
                    });
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let getDatasource = async () => {
            await $.ajax({
                url: END_POINT + API.getDatasource,
                method: 'GET',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    dashboard_id: $("#static_id").html(),
                },
                success: async (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    listDatasource = res.data;
                    await updateListDatasource();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let addDatasource = () => {
            let webservice_id = [];
            let iot_service_id = [];

            $("input[name='webservice_id']").each(function(){
                webservice_id.push($(this).val());
            });

            $("input[name='iot_service_id']").each(function(){
                iot_service_id.push($(this).val());
            });

            $.ajax({
                url: END_POINT + API.addDatasource,
                method: 'POST',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    dashboard_id: $("#static_id").html(),
                    name: $("#name_datasource").val(),
                    webservice_id: webservice_id,
                    timeInterval: 4500,
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    getDatasource();
                    $("#addDatasource").modal('hide');
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let updateListDatasource = async () => {
            $("#list_datasource").empty();
            $(".select-datasource").empty();
            let html = "<h5>Datasource</h5>";
            let opt = "<option value=''>--Select datasource--</option>";
            opt += `<optgroup label="Web service">`
            await listDatasource.map(async (data, index) => {
                html += `<div class="row">
                            <div class="col-2 edit-datasource" title="Edit" index=${index} style="cursor:pointer"> 
                                ${data.name}
                            </div>
                            <div class="col-2 unActiveApi" id="datasource-isActive-${index}">
                                <b>Not active</b>
                            </div>
                            <div class="col-3" id="datasource-${index}">

                            </div>
                            <div class="col-1">
                                <i class="fas fa-trash-alt remove-datasource" id="${data.id}"></i>
                            </div>
                        </div>`;
                opt += `<option value='${data.id}'>${data.name}</option>`;
                apiCount++;
                await getApiDatasource(index);
            });

            // $(".edit-datasource").unbind().click(function () {

            // });


            // socket.on('broadcast', function (data) {
            //     let api = listDatasource.filter(_data => {
            //         return _data.webservice_id === data.webservice_id
            //     })

            //     datasources.realtime[api[0].name] = data.data;

            //     widgetList.map(widget => {
            //         if(widget.updateSocket){
            //             widget.updateSocket(api[0].name);
            //         }
            //         else{
            //             if(widget.apiName === api[0].name){
            //                 widget.updateData();
            //             }
            //         }
            //     })
            // });

            // setInterval(() => {
            //     checkTimeToUpdate();
            // }, 1000);

            opt += `</optgroup>`
            $(".select-datasource").html(opt);
            let list_datasource = $("#list_datasource").html(html);

            list_datasource.find('.remove-datasource').unbind().click(function () {
                let id = $(this).attr('id');
                let datasource = findDatasource(id);
                let check = false;
                widgetList.map(widget => {
                    widget.datasource.map(_datasource => {
                        if (_datasource.split('.')[0] === datasource.name) {
                            check = true;
                        }
                    })

                })
                if (!check) {
                    swal({
                        title: "Are you sure?",
                        text: `to delete datasource name : ${datasource.name}`,
                        icon: "warning",
                        buttons: true,
                        dangerMode: true,
                    }).then((willDelete) => {
                        if (willDelete) {
                            deleteDatasource(id, datasource.name);

                        } else {
                            return;
                        }
                    });
                } else {
                    swal({
                        title: "Warning !",
                        text: `Can't delete datasource name : ${datasource.name} because have widget used this datasource`,
                        icon: "warning",
                        dangerMode: true,
                    });
                }
            });
        };

        let deleteDatasource = (id, name) => {
            $.ajax({
                url: END_POINT + API.deleteDatasource,
                method: 'DELETE',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                data: {
                    dashboard_id: $("#static_id").html(),
                    id: id,
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    // let index = datasources.findIndex(datasource => datasource.name == name);
                    // datasources.splice(index, 1);
                    $(`.remove-datasource[id='${id}']`).parent().parent().remove();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        // let onEditDatasourceClick = () => {
        //     if (modalEdit === null) {
        //         modalEdit = `    <div class="modal fade" id="addDatasource">
        //                             <div class="modal-dialog modal-lg">
        //                                 <div class="modal-content">

        //                                     <div class="modal-header">
        //                                         <h4 class="modal-title">Edit Datasource</h4>
        //                                         <button type="button" class="close" data-dismiss="modal">&times;</button>
        //                                     </div>

        //                                     <div class="modal-body">
        //                                         <div class="row">
        //                                             <div class="col-12">
        //                                                 <label for="">Name</label>
        //                                                 <input type="text" id="edit-name-datasource" class="form-control">
        //                                             </div>
        //                                         </div>
        //                                         <div class="row">
        //                                             <div class="col-6">
        //                                                 <label for="">Channel</label>
        //                                                 <select name="" id="edit-webservice_id" class="form-control">
        //                                                     <option value="">--Select Channel--</option>
        //                                                 </select>
        //                                             </div>
        //                                             <div class="col-6">
        //                                                 <label for="">Set time interval (s)</label>
        //                                                 <input type="number" id="add-data-time-interval" class="form-control">
        //                                             </div>
        //                                         </div>
        //                                     </div>

        //                                     <div class="modal-footer">
        //                                         <a class="btn btn-success btn-block" id="btn-add-new-datasource" href="#">Save</a>
        //                                     </div>
        //                                 </div>
        //                             </div>
        //                         </div>`;
        //     }
        // };

        let checkTimeToUpdate = () => {
            listDatasource.map(async (data, index) => {
                let diff = Dashboard.diffTime(data.lastUpdate, data.timeInterval);
                if (diff >= data.timeInterval) {
                    await getApiDatasource(index);
                }
                return;
            });

        };

        let getApiDatasource = async (index) => {
            //url: '/js/company/test-api2.json',
            let url = listDatasource[index].URL;
            let name = listDatasource[index].name;
            await $.ajax({
                url: '/js/company/test-api2.json',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                success: async (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    // let lastUpdate = new Date();
                    // listDatasource[index].lastUpdate = lastUpdate;
                    // $("#datasource-" + index).html(lastUpdate.toDateString() + " " + lastUpdate.toLocaleTimeString());
                    // $("#datasource-isActive-" + index).html('<b>Active</b>');
                    // $("#datasource-isActive-" + index).removeClass('unActiveApi');
                    // $("#datasource-isActive-" + index).addClass('activeApi');
                    datasources['web_service']['realtime'][name] = res;
                    // if (apiCount === listDatasource.length) {
                    //     state.loadingApi = true;
                    // }
                },
                error: (res) => {
                    console.log(res);
                }
            });

            await $.ajax({
                url: '/js/company/test-api-static.json',
                headers: {
                    authorization: 'bearer ' + getCookie('token'),
                },
                success: async (res, textStatus, xhr) => {
                    checkAuthRes(xhr)
                    let lastUpdate = new Date();
                    listDatasource[index].lastUpdate = lastUpdate;
                    $("#datasource-" + index).html(lastUpdate.toDateString() + " " + lastUpdate.toLocaleTimeString());
                    $("#datasource-isActive-" + index).html('<b>Active</b>');
                    $("#datasource-isActive-" + index).removeClass('unActiveApi');
                    $("#datasource-isActive-" + index).addClass('activeApi');
                    datasources['web_service']['firstData'][name] = res;
                    if (apiCount === listDatasource.length) {
                        state.loadingApi = true;
                    }
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let findDatasource = (id) => {
            return listDatasource.find(data => {
                return data.id == id;
            });
        };

        let getKeyDatasource = (index, data) => {
            if (typeof (data) == 'object') {
                if (index == keyInput.length) {
                    return [Object.keys(data), data] ? [Object.keys(data), data] : [];
                }
                return getKeyDatasource(index + 1, data[keyInput[index]]);
            }
        };

        let getKeyObject = (data) => {
            if (typeof (data) == 'object') {
                return Object.keys(data);
            }
        };

        let createDataList = (api, el = null) => {
            $(el).parent().find(".data-list").empty();
            //let js = apiSelect + "['" + api + "']";
            let js = api;
            $(el).val(js);
            updateDataList(js, el);
        };

        let updateDataList = (value, el = null) => {

            try {
                keyInput = value.match(REG);
                //let key = getKeyDatasource(2, datasources[keyInput[1]]);
                let key = getKeyObject(objectPath.get(datasources.realtime, value));
                el.parent().find(".data-list").empty();

                let html = "";
                if (keyInput.length > 1)
                    html += `<li class="back-value-data list-group-item" back="${keyInput.slice(0, keyInput.length - 1).join('.')}" style="cursor:pointer">Back</li>`;

                key.map(_key => {
                    let data = objectPath.get(datasources.realtime, `${value}.${_key}`);
                    html += `<li class="value-data list-group-item" style="cursor:pointer" value="${_key}">${_key} : ${data}</li>`;
                });
                let data_list = el.parent().find(".data-list").append(html);

                data_list.parent().find('.data-list').hover(function () {
                    $(this).closest('.value-datasource').focus();
                }, function () {
                    $(this).prev().blur();
                    $(this).hide();
                });

                data_list.find('.value-data').unbind().click(function () {
                    let el_val = $(this).parent().parent().find('.value-datasource,.value-group-data');
                    let a = $(el_val).val();
                    a += `.${$(this).attr('value')}`;
                    $(el_val).val(a);
                    updateDataList($(el_val).val(), el_val);
                    $(el_val).focus();

                    $(".value-group-data").change();
                });

                data_list.find('.back-value-data').unbind().click(function () {
                    let back = $(this).attr('back');
                    // let value = "datasource";
                    // for (let i = 1; i < back.length; i++) {
                    //     value += `['${back[i]}']`;
                    // }
                    $(this).parent().parent().find('.value-datasource,.value-group-data').val(back);
                    updateDataList(back, $(this).parent().parent().find('.value-datasource,.value-group-data'));
                });
                $(".data-list").scrollTop(0);


            } catch (error) {

            }

            // $("#Mutiline_value  .data-list,#Radar  .data-list,#Table  .data-list").hover(function () {
            //     $(this).closest('.value-datasource').focus();
            // }, function () {
            //     $(this).prev().blur();
            //     $(this).hide();
            // });

            // $(".value-data").unbind().click(function () {
            //     let el_val = $(this).parent().parent().find('.value-datasource,.value-group-data');
            //     let a = $(el_val).val();
            //     a += `['${$(this).attr('value')}']`;
            //     $(el_val).val(a);
            //     updateDataList($(el_val).val(), el_val);
            //     $(el_val).focus();

            //     $(".value-group-data").change();
            // });

            // $(".back-value-data").unbind().click(function () {
            //     let back = $(this).attr('back').split(',');
            //     let value = "datasource";
            //     for (let i = 1; i < back.length; i++) {
            //         value += `['${back[i]}']`;
            //     }
            //     $(this).parent().parent().find('.value-datasource,.value-group-data').val(value);
            //     updateDataList(value, $(this).parent().parent().find('.value-datasource,.value-group-data'));
            // });
        };


        let groupData = {
            createGroupData: (api, el = null) => {
                el.find(".data-list").empty();
                el.find('.value-group-data').val(api);
                groupData.updateDataGroup(api, el);
            },

            updateDataGroup: (api, el) => {
                try {
                    let key = getKeyObject(objectPath.get(datasources.realtime, api));
                    el.find(".data-list").empty();
                    let html = "";
                    key.map(_key => {
                        html += `<li class="value-data list-group-item" style="cursor:pointer" value="${_key}">${_key}</li>`;
                    });


                    let data_list = el.find(".data-list-group").append(html);

                    data_list.find('.value-data').unbind().click(function () {
                        let el_val = el.parent().parent().find('.value-group-data');
                        let a = $(el_val).val();
                        a += `.${$(this).attr('value')}`;
                        $(el_val).val(a);
                        groupData.updateDataGroup($(el_val).val(), el);
                        $(el_val).focus();

                        $(".value-group-data").change();
                    });

                    data_list.parent().find(".data-list").hover(function () {
                        $(this).closest('.value-datasource').focus();
                    }, function () {
                        $(this).prev().blur();
                        $(this).hide();
                    });

                    $(".data-list").scrollTop(0);
                    // if (keyInput.length > 2)
                    //     el.parent().find(".data-list").prepend(`<li class="back-value-data list-group-item" back="${keyInput.slice(0, keyInput.length - 1).join(',')}" style="cursor:pointer">Back</li>`);

                } catch (error) {
                    console.log(error);
                }

                $("#Mutiline_group_data .group-data .back-value-data,#map_group_data .group-data .back-value-data").unbind().click(function () {
                    let back = $(this).attr('back').split(',');
                    let value = "datasource.realtime";
                    for (let i = 1; i < back.length; i++) {
                        value += `['${back[i]}']`;
                    }
                    $(this).parent().parent().find('.value-datasource,.value-group-data').val(value);
                    updateDataList(value, $(this).parent().parent().find('.value-datasource,.value-group-data'));
                });
            },


            createDataValue: (api, el) => {
                try {
                    let key = getKeyObject(objectPath.get(datasources.realtime, api));
                    el.find(".data-list-value").empty();
                    let html = "";
                    key.map(_key => {
                        let data = objectPath.get(datasources.realtime, `${$(".value-group-data").val()}.0.${_key}`);
                        html += `<li class="value-data list-group-item" style="cursor:pointer" value="${_key}">${_key} : ${data}</li>`;
                    });

                    let data_list = el.find(".data-list-value").append(html);

                    data_list.find('.value-data').unbind().click(function () {
                        let el_val = $(this).parent().parent().find('.value-datasource');
                        let a = $(el_val).val();
                        a += `.${$(this).attr('value')}`;
                        $(el_val).val(a);
                        $(el_val).focus();
                        groupData.updateDataValue(a, el_val)
                    });;

                    data_list.parent().find(".data-list").hover(function () {
                        $(this).closest('.value-datasource').focus();
                    }, function () {
                        $(this).prev().blur();
                        $(this).hide();
                    });

                    $(".data-list-value").scrollTop(0);
                    // if (keyInput.length > 2)
                    //     el.parent().find(".data-list").prepend(`<li class="back-value-data list-group-item" back="${keyInput.slice(0, keyInput.length - 1).join(',')}" style="cursor:pointer">Back</li>`);

                } catch (error) {
                    console.log(error);
                }


                // $(".back-value-data").unbind().click(function () {
                //     let back = $(this).attr('back').split(',');
                //     let value = "datasource";
                //     for (let i = 1; i < back.length; i++) {
                //         value += `['${back[i]}']`;
                //     }
                //     $(this).parent().parent().find('.value-datasource,.value-group-data').val(value);
                //     updateDataList(value, $(this).parent().parent().find('.value-datasource,.value-group-data'));
                // });
            },

            updateDataValue: (api, el) => {
                try {

                    let key = getKeyObject(objectPath.get(datasources.realtime, $(".value-group-data").val() + '.0' + el.val()));
                    console.log($(".value-group-data").val() + '.0' + el.val());

                    let keyInput = [];
                    if (api != "") {
                        keyInput = api.match(REG);
                    }

                    el.parent().find(".data-list-value").empty();
                    let html = "";

                    if (keyInput.length == 1)
                        html += `<li class="back-value-data list-group-item" back="" style="cursor:pointer">Back</li>`;
                    else {
                        html += `<li class="back-value-data list-group-item" back="${keyInput.slice(0, keyInput.length - 1).join('.')}" style="cursor:pointer">Back</li>`;
                    }

                    key.map(_key => {
                        let data = objectPath.get(datasources.realtime, `${$(".value-group-data").val()}.0${el.val()}.${_key}`);
                        //console.log(`${datasources}${$(".value-group-data").val()}.0${api}.${_key}`, api, data);
                        html += `<li class="value-data list-group-item" style="cursor:pointer" value="${_key}">${_key} : ${data} </li>`;
                    });

                    $(".data-list-value").scrollTop(0);

                    let data_list = el.parent().find(".data-list-value").append(html);

                    data_list.find(".value-data").unbind().click(function () {
                        let el_val = $(this).parent().parent().find('.value-datasource');
                        let a = $(el_val).val();
                        a += `.${$(this).attr('value')}`;
                        $(el_val).val(a);
                        $(el_val).focus();
                        groupData.updateDataValue(a, el_val)
                    });

                    data_list.find(".back-value-data").unbind().click(function () {
                        let value_datasource = $(this).parent().parent().find('.value-datasource')
                        let back = $(this).attr('back');
                        if (back == '') {
                            value_datasource.val('');
                        } else {
                            value_datasource.val('.' + back);

                        };
                        groupData.updateDataValue(back, value_datasource)

                    });

                    data_list.parent().find(".data-list").hover(function () {
                        $(this).closest('.value-datasource').focus();
                    }, function () {
                        $(this).prev().blur();
                        $(this).hide();
                    });


                } catch (error) {
                    console.log(error);
                }
            }
        }

        // this.setDataAccess = (data) => {
        //     dataAccess = data;
        // };

        // this.getDatasourceValue = (index, data) => {
        //     if (typeof (data[dataAccess[index]]) == 'object') {
        //         return this.getDatasourceValue(index + 1, data[dataAccess[index]]);
        //     }
        //     return data[dataAccess[index]];
        // };

        // this.fatoryGetDatasourceValue = (inputDataAccess, key) => {
        //     try {
        //         dataAccess = inputDataAccess;
        //         return this.getDatasourceValue(2, datasources[key]);
        //     } catch (error) {

        //     }
        // };

        this.getDatasources = () => {
            return datasources;
        };

        let getLabelSelectGroup = (el) => {
            let selected = $(':selected', el);
            return selected.closest('optgroup').attr('label').toLowerCase().replace(' ','_');
        }

        let bindElement = async () => {
            $("#btn_add_param").unbind().click(function () {
                let html = $("#layout_param_add").html();

                let form_add_param = $("#form_add_param").append(html);
                form_add_param.find(".remove-param").unbind().click(function () {
                    $(this).parent().parent().remove();
                });
            });

            $("#btn-add-datasource").unbind().click(function () {
                $("#addDatasource").modal('show');
            });

            $("#btn-add-new-datasource").unbind().click(function () {
                addDatasource();
            });

            $('#Gauges,#TextValue,#text-line').on('change', '.select-datasource', function () {
                $(this).parent().next().find(".value-datasource").val('');
                $(this).parent().next().find(".data-list").hide();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    $(this).parent().next().find(".value-datasource").focus();
                    createDataList(datasource.name, $(this).parent().next().find(".value-datasource"));
                } else {
                    $(this).parent().next().find(".data-list").empty();
                }
            });

            // $('#Gauges,#TextValue,#text-line,#map').on('focus', '.value-datasource', function () {
            //     $('#Gauges,#TextValue,#text-line,#map').find('.data-list.active-data').each(function () {
            //         $(this).hide();
            //         $(this).removeClass('active-data');
            //     });
            //     $(this).next().addClass('active-data');
            //     $(this).next().show();
            // });

            $("#Mutiline_value").on('change', '.select-datasource', function () {
                let mutiline_value = $("#Mutiline_value");
                let value = $(this).parent().parent();
                let label = getLabelSelectGroup(this);

                value.find(".value-datasource").val('');
                value.find(".data-list").hide();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    //$(this).parent().parent().next().find(".value-datasource").focus();
                    createDataList(datasource.name, value.find(".value-datasource"));
                } else {
                    value.find(".data-list").empty();
                }
            });

            $("#map_value").on('change', '.select-datasource', function () {
                $("#map_value").find(".value-datasource").val('');
                $("#map_value").find(".data-list").hide();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    //$(this).parent().parent().next().find(".value-datasource").focus();
                    createDataList(datasource.name, $("#map_value").find(".value-datasource"));
                } else {
                    $(this).parent().parent().next().find(".data-list").empty();
                }
            });

            $("#Mutiline_group_data,#map_group_data").on('change', '.select-datasource', function () {
                $("#Mutiline_group_data,#map_group_data").find(".value-datasource").val('');
                $("#Mutiline_group_data,#map_group_data").find(".data-list").hide();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    groupData.createGroupData(datasource.name, $("#Mutiline_group_data,#map_group_data"));
                } else {
                    $(".data-list").empty();
                    $(".value-group-data").val('');
                }
            });


            $("#Mutiline_group_data,#map_group_data").on('change', '.value-group-data', function () {
                let el = $("#Mutiline_group_data,#map_group_data");
                let data = objectPath.get(datasources.realtime, $(this).val());
                if (validate.isArray(data)) {
                    el.find("input[name='end']").val(data.length - 1);
                    groupData.createDataValue($(this).val() + ".0", el);
                } else {
                    $(".data-list-value,data-list-label").empty();
                }

            });

            $("#Mutiline_group_data").on('change', '.data-list-value', function () {

            });

            $("#Table").on('change', '.select-datasource', function () {
                $("#Table").find(".value-datasource").val('');
                $("#Table").find(".data-list").hide();
                $("#Table").find(".data-list").empty();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    createDataList(datasource.name, $("#Table").find(".value-datasource"));
                }
            });

            $('#Radar').on('change', '.select-datasource', function () {
                let el_value = $(this).parent().parent().next().next();
                $(el_value).find(".value-datasource").val('');
                $(el_value).find(".data-list").hide();
                $(el_value).find(".data-list").empty();
                if ($(this).val() != '') {
                    let datasource = findDatasource($(this).val());
                    state.apiName = datasource.name;
                    createDataList(datasource.name, $(el_value).find(".value-datasource"));
                }
            });

            $("#addWidget .modal-body").on('focus', '.value-datasource,.value-group-data', function () {
                $("#addWidget").find('.data-list.active-data').hide().removeClass('active-data');
                $(this).next().addClass('active-data');
                $(this).next().show();
            });

            // $('#addWidget .modal-body').on('hover', '.data-list > .value-data', function () {
            //     console.log('hi');
            //     $(this).closest('.value-datasource').focus();
            // }, function () {
            //     $(this).prev().blur();
            //     $(this).hide();
            // });

            // $("#Table").on('focus', '.value-datasource', function () {
            //     $("#Table").find('.data-list.active-data').hide().removeClass('active-data');
            //     $(this).next().addClass('active-data');
            //     $(this).next().show();
            // });

            // $('#Radar').on('focus', '.value-datasource', function () {
            //     console.log($(this));
            //     $(this).parent().parent().find('.data-list.active-data').each(function () {
            //         $(this).hide();
            //         $(this).removeClass('active-data');
            //     });
            //     $(this).next().addClass('active-data');
            //     $(this).next().show();
            // });

            // $('#Mutiline_value').on('focus', '.value-datasource', function () {
            //     $(this).parent().parent().parent().find('.data-list.active-data').each(function () {
            //         $(this).hide();
            //         $(this).removeClass('active-data');
            //     });
            //     $(this).next().addClass('active-data');
            //     $(this).next().show();
            // });

            // $('#Mutiline_group_data,#map_group_data').on('focus', '.value-group-data', function () {
            //     $('#Mutiline_group_data,#map_group_data').find('.data-list.active-data').each(function () {
            //         $(this).hide();
            //         $(this).removeClass('active-data');
            //     });
            //     $(this).next().addClass('active-data');
            //     $(this).next().show();
            // });

            // $('#Radar').on('hover', '.data-list', function () {
            //     $(this).closest('.value-datasource').focus();
            // }, function () {
            //     $(this).prev().blur();
            //     $(this).hide();
            // });

            $('#Mutiline_value,#Gauges,#TextValue,#Radar').on('keyup', '.value-datasource', function () {
                updateDataList($(this).val(), $(this));
            });

            $("#btn-add-value-Mutiline").unbind().click(function () {
                let formhtml = $("#line_value_layout").first().html();
                let html = elements.mutiLineValue.append(formhtml);
                //let apiId = elements.mutiLineValue.find(elements.DOMString.class.selectDatasource).val();
                // if (apiId != '') {
                //     let datasource = findDatasource(apiId);
                //     html.find(elements.DOMString.class.dataList).hide();
                //     html.find(elements.DOMString.class.dataList).removeClass('active-data');
                //     createDataList(datasource.name, html.find(elements.DOMString.class.valueDatasource).last());
                // } else {
                //     $(this).parent().parent().next().find(elements.DOMString.class.dataList).empty();
                // }

            });

            $(".btn-add-point-map").unbind().click(function () {
                let formhtml = $("#map_value_layout").first().html();
                let html = elements.mapValue.append(formhtml);
                let apiId = elements.mapValue.find(elements.DOMString.class.selectDatasource).val();
                if (apiId != '') {
                    let datasource = findDatasource(apiId);
                    html.find(elements.DOMString.class.dataList).hide();
                    html.find(elements.DOMString.class.dataList).removeClass('active-data');
                    createDataList(datasource.name, html.find('.value-of-map:last ' + elements.DOMString.class.valueDatasource));
                } else {
                    $(this).parent().parent().next().find(elements.DOMString.class.dataList).empty();
                }

            });
        };

        this.getValueRealtime = (datasource_path) => {
            return objectPath.get(datasources.realtime, datasource_path);
        }

        this.getValueFirstData = (datasource_path) => {
            let apiName = datasource_path.split('.')[0];
            return objectPath.get(datasources.firstData, apiName);
        }

        this.getValueRealtimeGroup = (datasource_path, i) => {
            return objectPath.get(datasources.realtime, datasource_path.replace('[]', i));
        }


        this.initCreate = async () => {
            await bindElement();
            await getWebServices();
            await getDatasource();
        };
    }
}