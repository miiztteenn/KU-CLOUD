import croppie from 'croppie';
import {
    LOADING,
    addEventValidate,
    resetInputValidate,
    checkError
} from '../../utility';

const END_POINT = 'http://localhost:8000/api/';

const API = {
    changePassword: 'account/password',
    getAccount: 'account',
    uploadProfile: 'account/profile',
    updateName: 'account/name',
    changePrimaryEmail: 'account/email',
    addEmail: 'account/email',
    deleteEmail: 'account/email',
    changePrimaryPhone: 'account/phone',
    addPhone: 'account/phone',
    deletephone: 'account/phone',
};


toastr.options = {
    "closeButton": false,
    "debug": false,
    "newestOnTop": false,
    "progressBar": true,
    "positionClass": "toast-top-right",
    "preventDuplicates": false,
    "onclick": null,
    "showDuration": "300",
    "hideDuration": "1000",
    "timeOut": "3000",
    "extendedTimeOut": "1000",
    "showEasing": "swing",
    "hideEasing": "linear",
    "showMethod": "fadeIn",
    "hideMethod": "fadeOut"
};


class Account {
    constructor() {

        let accountData = null;

        let uploadCrop = null;
        let rawImg = null;

        let createEmailAndPhone = () => {


            let email_select = "";
            let email_list = accountData.email.map((data, index) => {
                status = "";
                if (data.is_primary) {
                    status += `<span class="badge badge-pill badge-primary d-flex justify-content-center align-items-center">Primary</span>`;
                }
                if (data.is_verify && !data.is_primary) {
                    email_select += `<option value=${data.email_user}>${data.email_user}</option>`;
                    status += `<span class="badge badge-pill badge-success d-flex justify-content-center align-items-center">Verify success</span> 
                               <i class="far fa-trash-alt text-danger ml-3 btn-delete-email"  style="cursor:pointer" email="${data.email_user}" index="${index}"></i>`;
                } else if (data.is_verify && data.is_primary) {
                    status += `<span class="badge badge-pill badge-success d-flex justify-content-center align-items-center">Verify success</span> `;
                } else {
                    status += `<span class="badge badge-pill badge-danger d-flex justify-content-center align-items-center">Verify not success</span> 
                               <i class="fas fa-paper-plane text-primary  ml-3" style="cursor:pointer" email="${data.email_user}"></i> 
                               <i class="far fa-trash-alt text-danger ml-3 btn-delete-email"  style="cursor:pointer" email="${data.email_user}" index="${index}"></i> `;
                }
                return `<li class="list-group-item mt-1" id="email-${index}" style="padding:.375rem .75rem;">
                            <div class="row">
                                <div class="col-6">
                                ${data.email_user} 
                                </div>
                                <div class="col-6 d-flex justify-content-end">
                                ${status}
                                </div>
                            </div>
                        </li>`;
            });

            let phone_select = "";
            let phone_list = accountData.phone.map((data, index) => {
                status = "";
                if (data.is_primary) {
                    status = `<span class="badge badge-pill badge-primary d-flex justify-content-center align-items-center">Primary</span>`;
                }
                if (data.is_verify && !data.is_primary) {
                    phone_select += `<option value=${data.phone_user}>${data.phone_user}</option>`;
                    status += `<span class="badge badge-pill badge-success d-flex justify-content-center align-items-center">Verify success</span> 
                               <i class="far fa-trash-alt text-danger ml-3 btn-delete-phone"  style="cursor:pointer" phone="${data.phone_user}" index="${index}"></i>`;
                } else if (data.is_verify && data.is_primary) {
                    status += `<span class="badge badge-pill badge-success d-flex justify-content-center align-items-center">Verify success</span> `;
                } else {
                    status += `<span class="badge badge-pill badge-danger d-flex justify-content-center align-items-center">Verify not success</span>
                               <i class="fas fa-paper-plane text-primary  ml-3" style="cursor:pointer" phone="${data.phone_user}"></i> 
                               <i class="far fa-trash-alt text-danger ml-3 btn-delete-phone"  style="cursor:pointer" phone="${data.phone_user}" index="${index}"></i> `;
                }
                return `<li class="list-group-item mt-1" id="phone-${index}"  style="padding:.375rem .75rem;">
                            <div class="row">
                                <div class="col-6">
                                ${data.phone_user} 
                                </div>
                                <div class="col-6 d-flex justify-content-end">
                                ${status}
                                </div>
                            </div>
                        </li>`;
            });

            $("#select-email").html(email_select);
            $("#select-phone").html(phone_select);

            $('#list-email').html(email_list.join(''));
            $('#list-phone').html(phone_list.join(''));

            $(".btn-delete-email").unbind().click(function () {
                let email = $(this).attr('email');
                swal({
                    title: "Are you sure",
                    text: `to delete this email address ${email} ?`,
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                }).then((willDelete) => {
                    if (willDelete) {
                        deleteEmail($(this));
                    } else {
                        return;
                    }
                });
            });

            $(".btn-delete-phone").unbind().click(function () {
                let phone = $(this).attr('phone');
                swal({
                    title: "Are you sure",
                    text: `to delete this phone number ${phone} ?`,
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                }).then((willDelete) => {
                    if (willDelete) {
                        deletePhone($(this));
                    } else {
                        return;
                    }
                });
            });
        };

        let deleteEmail = (el) => {
            let email = $(el).attr('email');
            let index = $(el).attr('index');
            $.ajax({
                url: END_POINT + API.deleteEmail,
                method: 'DELETE',
                data: {
                    email: email
                },
                success: (res) => {
                    $(`#email-${index}`).remove();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let deletePhone = (el) => {
            let phone = $(el).attr('phone');
            let index = $(el).attr('index');
            $.ajax({
                url: END_POINT + API.deletephone,
                method: 'DELETE',
                data: {
                    phone: phone
                },
                success: (res) => {
                    $(`#phone-${index}`).remove();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let readFile = (input) => {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    rawImg = e.target.result;
                    $('#profile-crop').modal('show');
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        let bindElement = () => {

            $("input[name='img-profile']").change(function () {
                readFile(this);
            })

            $("#btn-crop-save").unbind().click(function () {
                $("#imageUploadForm").submit();
            })

            $('#imageUploadForm').on('submit', (function (e) {
                LOADING.set($("#btn-crop-save"));
                e.preventDefault();
                uploadCrop.croppie('result', {
                    type: 'canvas',
                    size: 'original'
                }).then(function (resp) {
                    $.ajax({
                        type: 'POST',
                        url: END_POINT + API.uploadProfile,
                        data: {
                            imgProfile: resp
                        },
                        success: function (data) {
                            $("#profile-crop").modal('hide');
                            LOADING.reset($("#btn-crop-save"));
                            location.reload();
                        },
                        error: function (data) {
                            console.log("error");
                            console.log(data);
                        }
                    });
                });
            }));

            $("#btn-update-password").unbind().click(function () {
                changePassword();
            });

            $("#btn-update-profile").unbind().click(function () {
                updateName();
            });

            $("#btn-add-email").unbind().click(function () {
                addEmail();
            });

            $("#btn-save-email-pri").unbind().click(function () {
                changePrimaryEmail();
            });

            $("#btn-add-phone").unbind().click(function () {
                addPhone();
            });

            $("#btn-save-phone-pri").unbind().click(function () {
                changePrimaryPhone();
            });

            $('#profile-crop').on('shown.bs.modal', function () {
                uploadCrop.croppie('bind', {
                    url: rawImg
                }).then(function () {
                    console.log('jQuery bind complete');
                });
            });

            uploadCrop = $('#upload-demo').croppie({
                enableExif: true,
                enforceBoundary: false,
                viewport: {
                    width: 300,
                    height: 300,
                    type: 'circle'
                },
                boundary: {
                    width: 400,
                    height: 400
                }
            });
        };

        let changePassword = () => {
            let old_password = $("input[name='old_password']").val();
            let new_password = $("input[name='new_password']").val();
            let confirm_password = $("input[name='confirm_password']").val();
            $(".text-error").remove();
            if (new_password === confirm_password) {
                $.ajax({
                    url: END_POINT + API.changePassword,
                    method: 'POST',
                    data: {
                        new_password: new_password,
                        old_password: old_password,
                    },
                    success: (res) => {
                        $("input[name='old_password']").val('');
                        $("input[name='new_password']").val('');
                        $("input[name='confirm_password']").val('');
                        toastr["success"]("Success");
                    },
                    error: (res) => {
                        if (!res.responseJSON.old_password) {
                            $("input[name='old_password']").after("<p class='text-danger text-error'>Old password wrong</p>")
                        }
                    }
                })
            } else {
                $("input[name='confirm_password']").after("<p class='text-danger text-error'>Passwords Don't Match</p>")
            }
        }

        let updateName = () => {
            let fname = $("input[name='fname']").val();
            let lname = $("input[name='lname']").val();
            LOADING.set($("#btn-update-profile"));
            $.ajax({
                url: END_POINT + API.updateName,
                method: 'POST',
                data: {
                    fname: fname,
                    lname: lname,
                },
                success: (res) => {
                    LOADING.reset($("#btn-update-profile"));
                    location.reload();
                },
                error: (res) => {

                }
            })
        };

        let addEmail = () => {
            let email = $("input[name='add-email']").val();
            $.ajax({
                url: END_POINT + API.addEmail,
                method: 'POST',
                data: {
                    email: email
                },
                success: (res) => {
                    $("input[name='add-email']").val('');
                    this.showDataLast();
                },
                error: (res) => {

                }
            });
        };

        let changePrimaryEmail = () => {
            let email = $("#select-email").val();
            $.ajax({
                url: END_POINT + API.changePrimaryEmail,
                method: 'PUT',
                data: {
                    email: email
                },
                success: (res) => {
                    this.showDataLast();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let addPhone = () => {
            let phone = $("input[name='add-phone']").val();
            $.ajax({
                url: END_POINT + API.addPhone,
                method: 'POST',

                data: {
                    phone: phone
                },
                success: (res) => {
                    $("input[name='add-phone']").val('');
                    this.showDataLast();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        let changePrimaryPhone = () => {
            let phone = $("#select-phone").val();
            $.ajax({
                url: END_POINT + API.changePrimaryPhone,
                method: 'PUT',
                data: {
                    phone: phone
                },
                success: (res) => {
                    this.showDataLast();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };

        this.initialAndRun = () => {
            this.showDataLast();
            bindElement();
        };

        this.showDataLast = () => {
            $.ajax({
                url: END_POINT + API.getAccount,
                success: (res) => {
                    accountData = res.data;
                    createEmailAndPhone();
                },
                error: (res) => {
                    console.log(res);
                }
            });
        };
    }
}


$(document).ready(function () {
    let account = new Account();
    account.initialAndRun();
});
