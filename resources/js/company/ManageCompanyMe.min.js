import croppie from 'croppie';
import {
    checkAuthRes,
    addEventValidate,
    checkError,
    resetInputValidate,
    LOADING,
} from '../utility';

const API = {
    getCompanyMe: "companies/me",
    uploadLogo: "company/logo",
}


validate.validators.presence.message = "is required";

let validateInput = {
    company: {
        parent: "form#form_edit_company",
        validate: {
            companyname: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50,
                },
            },
            alias: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50,
                },
            },
            note: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50,
                },
            },
            address_detail: {
                presence: {
                    allowEmpty: false,
                }
            },
            province: {
                presence: {
                    allowEmpty: false,
                }
            },
            amphure: {
                presence: {
                    allowEmpty: false,
                }
            },
            district: {
                presence: {
                    allowEmpty: false,
                }
            },
            zip_code: {
                presence: {
                    allowEmpty: false,
                }
            },
        }
    }  
}

class ManageCompanyMe {
    constructor() {
        let provinces = null;
        let amphures = null;
        let districts = null;
        let companyMe = null;

        let rawImg = null;
        let uploadCrop = null;

        let createSelectProvices = (value) => {
            let html = `<option value="">--Select province--</option>`;
            provinces.map(data => {
                html += `<option value="${data.province_id}">${data.name_th} ${data.name_en}</option>`
            })
            $('#province_edit').html(html);
            $('#province_edit').val(value);
        }

        let getProvinces = (value) => {
            $.ajax({
                url: END_POINT + 'address/provinces',
                method: 'GET',
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    provinces = res.data;
                    createSelectProvices(value);
                },
                error: (res) => {
                    console.log(res);
                }
            });
        }

        let createSelectAmphures = (amphure_id) => {
            let html = `<option value="">--Select amphure--</option>`;
            amphures.map(data => {
                html += `<option value="${data.amphure_id}">${data.name_th} ${data.name_en}</option>`
            })

            $("#amphure_edit").html(html);
            $("#amphure_edit").val(amphure_id);

        }

        let getAmphuresByProvince = (province_id,amphure_id) => {
            $.ajax({
                url: END_POINT + `address/amphures/province/${province_id}`,
                method: 'GET',
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    amphures = res.data;
                    createSelectAmphures(amphure_id);
                },
                error: (res) => {
                    console.log(res);
                }
            });
        }

        let createSelectdistrict = (district_id) => {
            let html = `<option value="">--Select district--</option>`;
            districts.map(data => {
                html += `<option value="${data.district_id}">${data.name_th} ${data.name_en}</option>`
            })
        
            $("#district_edit").html(html);
            $("#district_edit").val(district_id);
           
        }
        
        let getDistrictsByAmphures = (province_id,amphure_id,district_id)=>{
            $.ajax({
                url:END_POINT + `address/districts/province/${province_id}/amphure/${amphure_id}`,
                method: 'GET',
                success:(res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    districts = res.data;
                    createSelectdistrict(district_id); 

                    $("#loading").remove();
                    $("#form_edit_company").show();
                    $("#btn_submit_edit_company").show();
                },
                error:(res) => {
                    console.log(res);
                }
             });
        }


        let getCompanyMe = () => {
            $.ajax({
                url: END_POINT + API.getCompanyMe,
                success: (res) => {
                    getProvinces(res.data.province_id);
                    getAmphuresByProvince(res.data.province_id,res.data.amphure_id);
                    getDistrictsByAmphures(res.data.province_id, res.data.amphure_id,res.data.district_id);
                    companyMe = res.data;
                    $("#img_logo_company").attr("src",END_POINT+'company/logo/'+companyMe.img_logo);
                    $('#company_name_edit').val(res.data.company_name);
                    $('#alias_edit').val(res.data.alias);
                    $('#note_edit').val(res.data.note);
                    $('#address_edit').val(res.data.address_detail);
                    $('#zip_code_edit').val(res.data.zip_code);
                },
                error: (res) => {
                    console.log(res);
                }
            });
        }

        let updateCompany = () => {
            if(checkError(validateInput.company))
                return;
            LOADING.set($("#btn_submit_edit_company"));
            $.ajax({
                url: END_POINT + API.updateCompany,
                method : "PUT",
                data : {
                    company_name_input :  $('#company_name_edit').val(),
                    alias_input :  $('#alias_edit').val(),
                    note_input : $("#note_edit").val(),
                    address_detail : $("#address_edit").val(),
                    district : $("#district_edit").val(),
                    amphure :$("#amphure_edit").val(),
                    province :$("#province_edit").val()
                },
                success: (res,textStatus,xhr) => {
                    checkAuthRes(xhr);
                    LOADING.reset($("#btn_submit_edit_company"));
                    location.reload();
                },
                error: (res) => {
                    LOADING.reset($("#btn_submit_edit_company"));
                    console.log(res);
                }
            });
        }

        let readFile = (input) => {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('.upload-demo').addClass('ready');
                    rawImg = e.target.result;
                    $('#logo_crop').modal('show');
                }
                reader.readAsDataURL(input.files[0]);
            } else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        let bindElement = () => {

            $("input[name='imgLogo']").change(function () {
                readFile(this);
            })

            $("#btn-crop-save").unbind().click(function () {
                $("#imageUploadForm").submit();
            })

            $('#imageUploadForm').on('submit', (function (e) {
                LOADING.set($("#btn-crop-save"));
                e.preventDefault();
                uploadCrop.croppie('result', {
                    type: 'canvas',
                    size: 'original'
                }).then(function (resp) {
                    $.ajax({
                        type: 'POST',
                        url: END_POINT + API.uploadLogo,
                        data: {
                            img_logo: resp
                        },
                        success:(res,textStatus,xhr) => {
                            checkAuthRes(xhr)
                            $("#logo_crop").modal('hide');
                            LOADING.reset($("#btn-crop-save"));
                            location.reload();
                        },
                        error: function (data) {
                            console.log("error");
                            console.log(data);
                        }
                    });
                });
            }));



            $("#btn_submit_edit_company").unbind().click(function(){
                updateCompany();
            });

            $("#province_edit").change(function () {
                $("#zip_code_edit").val('')
                if ($(this).val() != "") {
                    $("#amphure_edit").html(`<option value="">--Select amphure--</option>`);
                    $("#district_edit").html(`<option value="">--Select district--</option>`);
                    getAmphuresByProvince($(this).val());
                } else {
                    $("#district_edit").html(`<option value="">--Select district--</option>`);
                    $("#amphure_edit").html(`<option value="">--Select amphure--</option>`);
                }
            });

            $("#amphure_edit").change(function () {
                $("#zip_code_edit").val('')
                if ($(this).val() != "") {
                    getDistrictsByAmphures($("#province_edit").val(), $(this).val());
                } else {
                    $("#district_edit").html(`<option value="">--Select district--</option>`);
                }
            });

            $("#district_edit").change(function () {
                $("#zip_code_edit").val('')
                if ($(this).val() != "") {
                    let district = districts.filter(data => {
                        return data.district_id === $(this).val();
                    });
                    $("#zip_code_edit").val(district[0].zip_code);
                } else {
                    $("#zip_code_edit").val('')
                }
            });

            
            $('#logo_crop').on('shown.bs.modal', function () {
                uploadCrop.croppie('bind', {
                    url: rawImg
                }).then(function () {
                    console.log('jQuery bind complete');
                });
            });

            uploadCrop = $('#upload-demo').croppie({
                enableExif: true,
                enforceBoundary: false,
                viewport: {
                    width: 300,
                    height: 300,
                    //type: 'circle'
                },
                boundary: {
                    width: 400,
                    height: 400
                }
            });
        }

        this.initAndRun = () => {
            bindElement();
            getCompanyMe();

            addEventValidate(validateInput.company);
        }
    }
}


$(document).ready(function () {
    let m = new ManageCompanyMe();
    m.initAndRun();
})
