import {
    LOADING,
    ERROR_INPUT,
    addEventValidate,
    resetInputValidate,
    checkError
} from '../utility';

const END_POINT = 'http://localhost:8000/api/';

let validateInput = {
    resetPassword: {
        parent: "form#form_reset_password",
        validate: {
            password: {
                presence: {
                    allowEmpty: false,
                },
                format: {
                    pattern: "[a-zA-Z0-9]+",
                    flags: "i",
                    message: "can only contain a-Z and 0-9"
                },
                length: {
                    minimum: 6,
                    message: "must be at least 6 characters"
                }
            },
            confirmPassword: {
                presence: {
                    allowEmpty: false,
                },
                format: {
                    pattern: "[a-zA-Z0-9]+",
                    flags: "i",
                    message: "can only contain a-Z and 0-9"
                },
                length: {
                    minimum: 6,
                    message: "must be at least 6 characters"
                },
                equality: "password"
            }
        }
    }
}


validate.validators.presence.message = "is required";

class ResetPassword{
    constructor(){
        let updatePassword = () => {
            if (checkError(validateInput.resetPassword)) return;
            LOADING.set($("#btn_reset_password"));
            $.ajax({
                url:END_POINT + "Auth/ResetPassword",
                method: 'PUT',
                data:{
                    user_id : $("#user_id").val(),
                    token : $("#token").val(),
                    password : $("#password").val(),
                },
                success:(res) => {
                    LOADING.reset($("#btn_reset_password"));
                    swal({
                        title: "Reset password success !",
                        text: "Please go to login again",
                        icon: "success",
                    }).then(() => {
                        var getUrl = window.location;
                        var baseUrl = getUrl .protocol + "//" + getUrl.host + "/" + 'Home';
                        window.location.href = baseUrl;
                    })
                },
                error:(res) => {
                    LOADING.reset($("#btn_reset_password"));
                    console.log(res);
                }
             });
        }

        let bindElement = () => {
            $("#btn_reset_password").unbind().click(function(){
                event.preventDefault();
                updatePassword();
            });
            // addEventValidate(validateInput.resetPassword);
        }

        this.initAndRun = () => {
            bindElement();
        }
    }
}

$(document).ready(function () {
    let resetPassword = new ResetPassword();
    resetPassword.initAndRun();
});