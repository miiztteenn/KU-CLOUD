import { LOADING, checkError, addEventValidate, resetInputValidate, checkAuthRes } from '../../utility';

validate.validators.presence.message = "is required";

let validateInput = {
    info: {
        parent: "",
        validate: {
            infoname: {
                presence: {
                    allowEmpty: false
                },
                length: {
                    maximum: 50,
                },
            }, 
        }
    },

}

class infoDataTable {
    constructor() {
        let infoDataTable = null;
        let infoList = null;
        let modalEdit = null;
        let modalDelete = null;
        let typeUser = null;
        let selectList = null;

        let bindElement = () => {
            $("#btn-add-info").click(function () {
                $("#addInfo").modal('show');
                resetInputValidate();
            });

            $("#btn-save-add-info").click(function () {
                validateInput.info.parent = "form#form-info";
                if(checkError(validateInput.info)) return;
                addInfoDashboard();
            });

            $('a[name="nav_link_item"]').click(function () {

                if($(this).attr('aria-controls') == "company")
                {      
                    selectList = infoList.company;
                }
                else
                {
                    selectList = infoList.customer;
                }

                updateDatatableData();
            });
        };

        let addInfoDashboard = () => {
            LOADING.set($("#btn-save-add-info"));
            let info_name = $("#info-name").val();
            $.ajax({
                url: END_POINT + "infographic/create",
                method: 'POST',
                data: {
                    name: info_name,
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    console.log("success");
                    $("#addInfo").modal('hide');
                    LOADING.reset($("#btn-save-add-info"));
                    this.showLastestDatatable();
                },
                error: (res) => {
                    console.log("error");
                    LOADING.reset($("#btn-save-add-info"));
                }
            });
        };

        let updateDatatableData = () => {
            let Datatable = [];
            infoDataTable.fnClearTable();

            if(typeUser == "COMPANY")
            {
                if(selectList == null)
                {      
                    selectList = infoList.company;
                }

                $.each(selectList, function (index, item) {
                    let ret = [];
                    ret[0] = item.name;
                    ret[1] = item.created_by;
                    ret[2] = item.updated_by;
                    ret[3] = `<center>
                                <button type="button" class="btn btn-primary btn-sm btn-lookup" key=${item.info_id} keyfilename=${item.name} data-toggle="tooltip"
                                    data-placement="top" title="Look">
                                    <i class="fas fa-search"></i>
                                </button>
                                <button type="button" class="btn btn-success btn-sm btn-edit" index=${index}  data-toggle="tooltip"
                                    data-placement="top" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button type="button" class="btn btn-danger btn-sm btn-delete" index=${index}  data-toggle="tooltip"
                                    data-placement="top" title="Delete">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </center>`;
                    Datatable.push(ret);
                });
            }
            else
            {
                $.each(infoList, function (index, item) {
                    let ret = [];
                    ret[0] = item.name;
                    ret[1] = `<center>
                                <button type="button" class="btn btn-primary btn-sm btn-lookup" key=${item.info_id} keyfilename=${item.name} data-toggle="tooltip"
                                    data-placement="top" title="Look">
                                    <i class="fas fa-search"></i>
                                </button>
                                <button type="button" class="btn btn-success btn-sm btn-edit" index=${index}  data-toggle="tooltip"
                                    data-placement="top" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button type="button" class="btn btn-danger btn-sm btn-delete" index=${index}  data-toggle="tooltip"
                                    data-placement="top" title="Delete">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                              </center>`;
                    Datatable.push(ret);
                });
            }

            if(Datatable.length > 0)
            {
                infoDataTable.fnAddData(Datatable);
            }

            $(".btn-lookup").unbind().click(function () {
                onBtnLookupClick($(this).attr('key'), $(this).attr('keyfilename'));
            });

            $(".btn-edit").unbind().click(function () {
                onBtnEditClick($(this).attr('index'));
                resetInputValidate();
            });

            $(".btn-delete").unbind().click(function () {
                onBtnDeleteClick($(this).attr('index'));
            });

            $('[data-toggle="tooltip"]').tooltip();
        };

        let onBtnLookupClick = (key, keyfilename) => {
            window.location.href = END_POINT_WED + "/Infographic/" + key +"/" + keyfilename + "/" + typeUser;
        };

        let onBtnEditClick = (key) => {
            if (modalEdit === null) {
                modalEdit = `
                <div class="modal fade" id="editInfo">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Edit Infographic</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                <form id="form-info">
                                    <div class="row">
                                        <div class="col-12">
                                            <label>Name</label>
                                            <input type="text" name="infoname" class="form-control" id="edit_info_name">
                                            <small class="messages-error"></small>
                                        </div>
                                    </div>
                                </form>
                            </div>

                            <div class="modal-footer">
                                <button type="button" id="btn-edit-submit" class="btn btn-success btn-block" data-loading-text="<i class='fas fa-circle-notch fa-spin'></i> Saving . . .">Save</button>
                            </div>
                        </div>
                    </div>
                </div>`;

                $('body').append(modalEdit);
            }

            $("#btn-edit-submit").unbind().click(function () {
                validateInput.info.parent = "form#form-info";
    
                if(checkError(validateInput.info)) return;

                onBtnSubmitEditClick(key);
            });

            $("#edit_info_name").val(infoList[key].name);
            $("#editInfo").modal('show');
        };

        let onBtnSubmitEditClick = (key) => {
            LOADING.set($("#btn-edit-submit"));
            $.ajax({
                url: END_POINT + 'infographic/update',
                method: 'PUT',
                data: {
                    info_id: infoList[key].info_id,
                    name: $("#edit_info_name").val(),
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    $("#editInfo").modal('hide');
                    LOADING.reset($("#btn-edit-submit"));
                    this.showLastestDatatable();
                },
                error: (res) => {
                    LOADING.reset($("#btn-edit-submit"));
                    console.log(res);
                }
            });
        };

        let onBtnDeleteClick = (key) => {
            if (modalDelete === null) {
                modalDelete = `
                <div class="modal fade" id="deleteInfo">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h4 class="modal-title">Delete Infographic</h4>
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                            </div>

                            <div class="modal-body">
                                <div class="row">
                                    <div class="col-12">
                                        Are you sure to delete info name : <span id="delete-info-name"></span> ?
                                    </div>
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="button" id="btn-submit-delete" class="btn btn-danger btn-block" data-loading-text="<i class='fas fa-circle-notch fa-spin'></i> Saving . . .">Delete</button>
                            </div>
                        </div>
                    </div>
                </div>`;

                $('body').append(modalDelete);
            }

            $("#btn-submit-delete").unbind().click(function () {
                onBtnSubmitDeleteClick(key);
            });

            $("#delete-info-name").html(infoList[key].name);

            $("#deleteInfo").modal('show');
        };

        let onBtnSubmitDeleteClick = (key) => {
            LOADING.set($("#btn-submit-delete"));
            $.ajax({
                url: END_POINT + "infographic/delete",
                method: "DELETE",
                data: {
                    info_id: infoList[key].info_id,
                },
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    LOADING.reset($("#btn-submit-delete"));
                    $("#deleteInfo").modal('hide');
                    this.showLastestDatatable();
                },
                error: (res) => {
                    LOADING.reset($("#btn-submit-delete"));
                    console.log(res);
                }

            });
        };

        let initialDatatable = () => {
            if (infoDataTable !== null) {
                return false;
            }
            infoDataTable = $('#example').dataTable({});
        };

        let showDatatableLoadingStatus = (showOrHide) => {
            if (showOrHide) {
                $(".dataTables_wrapper").hide();
                $('#example').hide();
                $('.lds-roller').show();
            }
            else {
                $(".dataTables_wrapper").show();
                $('.lds-roller').hide();
                $('.text-loading').hide();
                $('#example').show();
                $('.text-static').show();
            }
        };

        this.initialAndRun = () => {
            bindElement();
            initialDatatable();
            this.showLastestDatatable();
            addEventValidate(validateInput.info);
        };

        this.showLastestDatatable = () => {
            showDatatableLoadingStatus(true);
            $.ajax({
                url: END_POINT + "infographic/getInfoByUserType",
                success: (res, textStatus, xhr) => {
                    checkAuthRes(xhr);
                    showDatatableLoadingStatus(false);
                    infoList = res.data;
                    typeUser = res.type_user;
                    console.log(infoList);
                    updateDatatableData();
                },
                error: (res) => {
                    showDatatableLoadingStatus(false);
                }
            });
        };
    }
}

$(document).ready(function () {
    let et = new infoDataTable();
    et.initialAndRun();
});
